{"version":3,"file":"React-profiling.js","sources":["../../packages/shared/ReactVersion.js","../../packages/shared/forks/ReactFeatureFlags.www.js","../../packages/shared/ReactSymbols.js","../../packages/react/src/ReactNoopUpdateQueue.js","../../packages/shared/assign.js","../../packages/react/src/ReactBaseClasses.js","../../packages/react/src/ReactCreateRef.js","../../packages/shared/isArray.js","../../packages/react/src/ReactSharedInternalsClient.js","../../packages/shared/hasOwnProperty.js","../../packages/react/src/jsx/ReactJSXElement.js","../../packages/react/src/ReactChildren.js","../../packages/react/src/ReactContext.js","../../packages/react/src/ReactLazy.js","../../packages/react/src/ReactForwardRef.js","../../packages/react/src/ReactMemo.js","../../packages/react/src/ReactCacheClient.js","../../packages/react/src/ReactHooks.js","../../packages/shared/reportGlobalError.js","../../packages/react/src/ReactStartTransition.js","../../packages/react/src/ReactTransitionType.js","../../packages/react/src/ReactAct.js","../../packages/react/src/ReactClient.js","../../packages/react/src/jsx/ReactJSX.js","../../packages/react/index.fb.js"],"sourcesContent":["export default '19.1.0-canary-144de20e-20250717';\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport typeof * as FeatureFlagsType from 'shared/ReactFeatureFlags';\nimport typeof * as ExportsType from './ReactFeatureFlags.www';\nimport typeof * as DynamicFeatureFlags from './ReactFeatureFlags.www-dynamic';\n\n// Re-export dynamic flags from the www version.\nconst dynamicFeatureFlags: DynamicFeatureFlags = require('ReactFeatureFlags');\n\nexport const {\n  alwaysThrottleRetries,\n  disableDefaultPropsExceptForClasses,\n  disableLegacyContextForFunctionComponents,\n  disableSchedulerTimeoutInWorkLoop,\n  enableDO_NOT_USE_disableStrictPassiveEffect,\n  enableHiddenSubtreeInsertionEffectCleanup,\n  enableInfiniteRenderLoopDetection,\n  enableNoCloningMemoCache,\n  enableObjectFiber,\n  enableRenderableContext,\n  enableRetryLaneExpiration,\n  enableSiblingPrerendering,\n  enableTransitionTracing,\n  enableTrustedTypesIntegration,\n  enableUseEffectCRUDOverload,\n  favorSafetyOverHydrationPerf,\n  renameElementSymbol,\n  retryLaneExpirationMs,\n  syncLaneExpirationMs,\n  transitionLaneExpirationMs,\n  enableFastAddPropertiesInDiffing,\n  enableViewTransition,\n  enableComponentPerformanceTrack,\n  enableScrollEndPolyfill,\n  enableFragmentRefs,\n  ownerStackLimit,\n} = dynamicFeatureFlags;\n\n// On WWW, __EXPERIMENTAL__ is used for a new modern build.\n// It's not used anywhere in production yet.\n\nexport const enableProfilerTimer = __PROFILE__;\nexport const enableProfilerCommitHooks = __PROFILE__;\nexport const enableProfilerNestedUpdatePhase = __PROFILE__;\nexport const enableUpdaterTracking = __PROFILE__;\nexport const enableFabricCompleteRootInCommitPhase = false;\n\nexport const enableSuspenseAvoidThisFallback = true;\n\nexport const enableCPUSuspense = true;\nexport const enableUseEffectEventHook = true;\nexport const enableMoveBefore = false;\nexport const disableInputAttributeSyncing = false;\nexport const enableLegacyFBSupport = true;\n\nexport const enableYieldingBeforePassive = false;\n\nexport const enableThrottledScheduling = false;\n\nexport const enableHydrationLaneScheduling = true;\n\n// Logs additional User Timing API marks for use with an experimental profiling tool.\nexport const enableSchedulingProfiler: boolean =\n  __PROFILE__ && dynamicFeatureFlags.enableSchedulingProfiler;\n\nexport const disableLegacyContext = __EXPERIMENTAL__;\n\nexport const enableLegacyCache = true;\n\nexport const enableAsyncIterableChildren = false;\n\nexport const enableTaint = false;\n\nexport const enablePostpone = false;\n\nexport const enableHalt = false;\n\n// TODO: www currently relies on this feature. It's disabled in open source.\n// Need to remove it.\nexport const disableCommentsAsDOMContainers = false;\n\nexport const enableCreateEventHandleAPI = true;\n\nexport const enableScopeAPI = true;\n\nexport const enableSuspenseCallback = true;\n\nexport const enableLegacyHidden = true;\n\nexport const disableTextareaChildren = __EXPERIMENTAL__;\n\nexport const enableFizzExternalRuntime = true;\n\nexport const passChildrenWhenCloningPersistedNodes = false;\n\nexport const enablePersistedModeClonedFlag = false;\n\nexport const enableAsyncDebugInfo = false;\nexport const disableClientCache = true;\n\nexport const enableReactTestRendererWarning = false;\n\nexport const disableLegacyMode = true;\n\nexport const enableShallowPropDiffing = false;\n\nexport const enableLazyPublicInstanceInFabric = false;\n\nexport const enableSwipeTransition = false;\n\n// Flow magic to verify the exports of this file match the original version.\n((((null: any): ExportsType): FeatureFlagsType): ExportsType);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {renameElementSymbol} from 'shared/ReactFeatureFlags';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types.\nexport const REACT_LEGACY_ELEMENT_TYPE: symbol = Symbol.for('react.element');\nexport const REACT_ELEMENT_TYPE: symbol = renameElementSymbol\n  ? Symbol.for('react.transitional.element')\n  : REACT_LEGACY_ELEMENT_TYPE;\nexport const REACT_PORTAL_TYPE: symbol = Symbol.for('react.portal');\nexport const REACT_FRAGMENT_TYPE: symbol = Symbol.for('react.fragment');\nexport const REACT_STRICT_MODE_TYPE: symbol = Symbol.for('react.strict_mode');\nexport const REACT_PROFILER_TYPE: symbol = Symbol.for('react.profiler');\nexport const REACT_PROVIDER_TYPE: symbol = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\nexport const REACT_CONSUMER_TYPE: symbol = Symbol.for('react.consumer');\nexport const REACT_CONTEXT_TYPE: symbol = Symbol.for('react.context');\nexport const REACT_FORWARD_REF_TYPE: symbol = Symbol.for('react.forward_ref');\nexport const REACT_SUSPENSE_TYPE: symbol = Symbol.for('react.suspense');\nexport const REACT_SUSPENSE_LIST_TYPE: symbol = Symbol.for(\n  'react.suspense_list',\n);\nexport const REACT_MEMO_TYPE: symbol = Symbol.for('react.memo');\nexport const REACT_LAZY_TYPE: symbol = Symbol.for('react.lazy');\nexport const REACT_SCOPE_TYPE: symbol = Symbol.for('react.scope');\nexport const REACT_ACTIVITY_TYPE: symbol = Symbol.for('react.activity');\nexport const REACT_LEGACY_HIDDEN_TYPE: symbol = Symbol.for(\n  'react.legacy_hidden',\n);\nexport const REACT_TRACING_MARKER_TYPE: symbol = Symbol.for(\n  'react.tracing_marker',\n);\n\nexport const REACT_MEMO_CACHE_SENTINEL: symbol = Symbol.for(\n  'react.memo_cache_sentinel',\n);\n\nexport const REACT_POSTPONE_TYPE: symbol = Symbol.for('react.postpone');\n\nexport const REACT_VIEW_TRANSITION_TYPE: symbol = Symbol.for(\n  'react.view_transition',\n);\n\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<any> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n\nexport const ASYNC_ITERATOR = Symbol.asyncIterator;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  if (__DEV__) {\n    const constructor = publicInstance.constructor;\n    const componentName =\n      (constructor && (constructor.displayName || constructor.name)) ||\n      'ReactClass';\n    const warningKey = `${componentName}.${callerName}`;\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n    console.error(\n      \"Can't call %s on a component that is not yet mounted. \" +\n        'This is a no-op, but it might indicate a bug in your application. ' +\n        'Instead, assign to `this.state` directly or define a `state = {};` ' +\n        'class property with the desired state in the %s component.',\n      callerName,\n      componentName,\n    );\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nconst ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (\n    publicInstance,\n    completeState,\n    callback,\n    callerName,\n  ) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (\n    publicInstance,\n    partialState,\n    callback,\n    callerName,\n  ) {\n    warnNoop(publicInstance, 'setState');\n  },\n};\n\nexport default ReactNoopUpdateQueue;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst assign = Object.assign;\n\nexport default assign;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactNoopUpdateQueue from './ReactNoopUpdateQueue';\nimport assign from 'shared/assign';\n\nconst emptyObject = {};\nif (__DEV__) {\n  Object.freeze(emptyObject);\n}\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    typeof partialState !== 'object' &&\n    typeof partialState !== 'function' &&\n    partialState != null\n  ) {\n    throw new Error(\n      'takes an object of state variables to update or a ' +\n        'function which returns an object of state variables.',\n    );\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (__DEV__) {\n  const deprecatedAPIs = {\n    isMounted: [\n      'isMounted',\n      'Instead, make sure to clean up subscriptions and pending requests in ' +\n        'componentWillUnmount to prevent memory leaks.',\n    ],\n    replaceState: [\n      'replaceState',\n      'Refactor your code to use setState instead (see ' +\n        'https://github.com/facebook/react/issues/3236).',\n    ],\n  };\n  const defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        console.warn(\n          '%s(...) is deprecated in plain JavaScript React classes. %s',\n          info[0],\n          info[1],\n        );\n        return undefined;\n      },\n    });\n  };\n  for (const fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\n\n/**\n * Convenience component with default shallow equality check for sCU.\n */\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nconst pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\n// Avoid an extra prototype jump for these methods.\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\nexport {Component, PureComponent};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport type {RefObject} from 'shared/ReactTypes';\n\n// an immutable object with a single mutable value\nexport function createRef(): RefObject {\n  const refObject = {\n    current: null,\n  };\n  if (__DEV__) {\n    Object.seal(refObject);\n  }\n  return refObject;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\n\nconst isArrayImpl = Array.isArray;\n\nfunction isArray(a: mixed): boolean {\n  return isArrayImpl(a);\n}\n\nexport default isArray;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\nimport type {AsyncDispatcher} from 'react-reconciler/src/ReactInternalTypes';\nimport type {BatchConfigTransition} from 'react-reconciler/src/ReactFiberTracingMarkerComponent';\nimport type {TransitionTypes} from './ReactTransitionType';\n\nexport type SharedStateClient = {\n  H: null | Dispatcher, // ReactCurrentDispatcher for Hooks\n  A: null | AsyncDispatcher, // ReactCurrentCache for Cache\n  T: null | BatchConfigTransition, // ReactCurrentBatchConfig for Transitions\n  S: null | ((BatchConfigTransition, mixed) => void), // onStartTransitionFinish\n  V: null | TransitionTypes, // Pending Transition Types for the Next Transition\n\n  // DEV-only\n\n  // ReactCurrentActQueue\n  actQueue: null | Array<RendererTask>,\n\n  // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n  isBatchingLegacy: boolean,\n  didScheduleLegacyUpdate: boolean,\n\n  // Tracks whether something called `use` during the current batch of work.\n  // Determines whether we should yield to microtasks to unwrap already resolved\n  // promises without suspending.\n  didUsePromise: boolean,\n\n  // Track first uncaught error within this act\n  thrownErrors: Array<mixed>,\n\n  // ReactDebugCurrentFrame\n  getCurrentStack: null | (() => string),\n\n  // ReactOwnerStackReset\n  recentlyCreatedOwnerStacks: 0,\n};\n\nexport type RendererTask = boolean => RendererTask | null;\n\nconst ReactSharedInternals: SharedStateClient = ({\n  H: null,\n  A: null,\n  T: null,\n  S: null,\n  V: null,\n}: any);\n\nif (__DEV__) {\n  ReactSharedInternals.actQueue = null;\n  ReactSharedInternals.isBatchingLegacy = false;\n  ReactSharedInternals.didScheduleLegacyUpdate = false;\n  ReactSharedInternals.didUsePromise = false;\n  ReactSharedInternals.thrownErrors = [];\n  // Stack implementation injected by the current renderer.\n  ReactSharedInternals.getCurrentStack = (null: null | (() => string));\n  ReactSharedInternals.recentlyCreatedOwnerStacks = 0;\n}\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// $FlowFixMe[method-unbinding]\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport default hasOwnProperty;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport hasOwnProperty from 'shared/hasOwnProperty';\nimport assign from 'shared/assign';\nimport {\n  REACT_ELEMENT_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\nimport isArray from 'shared/isArray';\nimport {\n  disableDefaultPropsExceptForClasses,\n  ownerStackLimit,\n} from 'shared/ReactFeatureFlags';\n\nconst createTask =\n  // eslint-disable-next-line react-internal/no-production-logging\n  __DEV__ && console.createTask\n    ? // eslint-disable-next-line react-internal/no-production-logging\n      console.createTask\n    : () => null;\n\nfunction getTaskName(type) {\n  if (type === REACT_FRAGMENT_TYPE) {\n    return '<>';\n  }\n  if (\n    typeof type === 'object' &&\n    type !== null &&\n    type.$$typeof === REACT_LAZY_TYPE\n  ) {\n    // We don't want to eagerly initialize the initializer in DEV mode so we can't\n    // call it to extract the type so we don't know the type of this component.\n    return '<...>';\n  }\n  try {\n    const name = getComponentNameFromType(type);\n    return name ? '<' + name + '>' : '<...>';\n  } catch (x) {\n    return '<...>';\n  }\n}\n\nfunction getOwner() {\n  if (__DEV__) {\n    const dispatcher = ReactSharedInternals.A;\n    if (dispatcher === null) {\n      return null;\n    }\n    return dispatcher.getOwner();\n  }\n  return null;\n}\n\n/** @noinline */\nfunction UnknownOwner() {\n  /** @noinline */\n  return (() => Error('react-stack-top-frame'))();\n}\nconst createFakeCallStack = {\n  'react-stack-bottom-frame': function (callStackForError) {\n    return callStackForError();\n  },\n};\n\nlet specialPropKeyWarningShown;\nlet didWarnAboutElementRef;\nlet didWarnAboutOldJSXRuntime;\nlet unknownOwnerDebugStack;\nlet unknownOwnerDebugTask;\n\nif (__DEV__) {\n  didWarnAboutElementRef = {};\n\n  // We use this technique to trick minifiers to preserve the function name.\n  unknownOwnerDebugStack = createFakeCallStack['react-stack-bottom-frame'].bind(\n    createFakeCallStack,\n    UnknownOwner,\n  )();\n  unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));\n}\n\nfunction hasValidRef(config) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(config, 'ref')) {\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(config, 'key')) {\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  if (__DEV__) {\n    const warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n        console.error(\n          '%s: `key` is not a prop. Trying to access it will result ' +\n            'in `undefined` being returned. If you need to access the same ' +\n            'value within the child component, you should pass it as a different ' +\n            'prop. (https://react.dev/link/special-props)',\n          displayName,\n        );\n      }\n    };\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true,\n    });\n  }\n}\n\nfunction elementRefGetterWithDeprecationWarning() {\n  if (__DEV__) {\n    const componentName = getComponentNameFromType(this.type);\n    if (!didWarnAboutElementRef[componentName]) {\n      didWarnAboutElementRef[componentName] = true;\n      console.error(\n        'Accessing element.ref was removed in React 19. ref is now a ' +\n          'regular prop. It will be removed from the JSX Element ' +\n          'type in a future release.',\n      );\n    }\n\n    // An undefined `element.ref` is coerced to `null` for\n    // backwards compatibility.\n    const refProp = this.props.ref;\n    return refProp !== undefined ? refProp : null;\n  }\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.transitional.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\nfunction ReactElement(\n  type,\n  key,\n  self,\n  source,\n  owner,\n  props,\n  debugStack,\n  debugTask,\n) {\n  // Ignore whatever was passed as the ref argument and treat `props.ref` as\n  // the source of truth. The only thing we use this for is `element.ref`,\n  // which will log a deprecation warning on access. In the next release, we\n  // can remove `element.ref` as well as the `ref` argument.\n  const refProp = props.ref;\n\n  // An undefined `element.ref` is coerced to `null` for\n  // backwards compatibility.\n  const ref = refProp !== undefined ? refProp : null;\n\n  let element;\n  if (__DEV__) {\n    // In dev, make `ref` a non-enumerable property with a warning. It's non-\n    // enumerable so that test matchers and serializers don't access it and\n    // trigger the warning.\n    //\n    // `ref` will be removed from the element completely in a future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n\n      // Built-in properties that belong on the element\n      type,\n      key,\n\n      props,\n\n      // Record the component responsible for creating this element.\n      _owner: owner,\n    };\n    if (ref !== null) {\n      Object.defineProperty(element, 'ref', {\n        enumerable: false,\n        get: elementRefGetterWithDeprecationWarning,\n      });\n    } else {\n      // Don't warn on access if a ref is not given. This reduces false\n      // positives in cases where a test serializer uses\n      // getOwnPropertyDescriptors to compare objects, like Jest does, which is\n      // a problem because it bypasses non-enumerability.\n      //\n      // So unfortunately this will trigger a false positive warning in Jest\n      // when the diff is printed:\n      //\n      //   expect(<div ref={ref} />).toEqual(<span ref={ref} />);\n      //\n      // A bit sketchy, but this is what we've done for the `props.key` and\n      // `props.ref` accessors for years, which implies it will be good enough\n      // for `element.ref`, too. Let's see if anyone complains.\n      Object.defineProperty(element, 'ref', {\n        enumerable: false,\n        value: null,\n      });\n    }\n  } else {\n    // In prod, `ref` is a regular property and _owner doesn't exist.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n\n      // Built-in properties that belong on the element\n      type,\n      key,\n      ref,\n\n      props,\n    };\n  }\n\n  if (__DEV__) {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: 0,\n    });\n    // debugInfo contains Server Component debug information.\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null,\n    });\n    Object.defineProperty(element, '_debugStack', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: debugStack,\n    });\n    Object.defineProperty(element, '_debugTask', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: debugTask,\n    });\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\n\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\nexport function jsxProd(type, config, maybeKey) {\n  let key = null;\n\n  // Currently, key can be spread in as a prop. This causes a potential\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n  // but as an intermediary step, we will use jsxDEV for everything except\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n  // key is explicitly declared to be undefined or not.\n  if (maybeKey !== undefined) {\n    if (__DEV__) {\n      checkKeyStringCoercion(maybeKey);\n    }\n    key = '' + maybeKey;\n  }\n\n  if (hasValidKey(config)) {\n    if (__DEV__) {\n      checkKeyStringCoercion(config.key);\n    }\n    key = '' + config.key;\n  }\n\n  let props;\n  if (!('key' in config)) {\n    // If key was not spread in, we can reuse the original props object. This\n    // only works for `jsx`, not `createElement`, because `jsx` is a compiler\n    // target and the compiler always passes a new object. For `createElement`,\n    // we can't assume a new object is passed every time because it can be\n    // called manually.\n    //\n    // Spreading key is a warning in dev. In a future release, we will not\n    // remove a spread key from the props object. (But we'll still warn.) We'll\n    // always pass the object straight through.\n    props = config;\n  } else {\n    // We need to remove reserved props (key, prop, ref). Create a fresh props\n    // object and copy over all the non-reserved props. We don't use `delete`\n    // because in V8 it will deopt the object to dictionary mode.\n    props = {};\n    for (const propName in config) {\n      // Skip over reserved prop names\n      if (propName !== 'key') {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  if (!disableDefaultPropsExceptForClasses) {\n    // Resolve default props\n    if (type && type.defaultProps) {\n      const defaultProps = type.defaultProps;\n      for (const propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n  }\n\n  return ReactElement(\n    type,\n    key,\n    undefined,\n    undefined,\n    getOwner(),\n    props,\n    undefined,\n    undefined,\n  );\n}\n\n// While `jsxDEV` should never be called when running in production, we do\n// support `jsx` and `jsxs` when running in development. This supports the case\n// where a third-party dependency ships code that was compiled for production;\n// we want to still provide warnings in development.\n//\n// So these functions are the _dev_ implementations of the _production_\n// API signatures.\n//\n// Since these functions are dev-only, it's ok to add an indirection here. They\n// only exist to provide different versions of `isStaticChildren`. (We shouldn't\n// use this pattern for the prod versions, though, because it will add an call\n// frame.)\nexport function jsxProdSignatureRunningInDevWithDynamicChildren(\n  type,\n  config,\n  maybeKey,\n  source,\n  self,\n) {\n  if (__DEV__) {\n    const isStaticChildren = false;\n    const trackActualOwner =\n      __DEV__ &&\n      ReactSharedInternals.recentlyCreatedOwnerStacks++ < ownerStackLimit;\n    return jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      __DEV__ &&\n        (trackActualOwner\n          ? Error('react-stack-top-frame')\n          : unknownOwnerDebugStack),\n      __DEV__ &&\n        (trackActualOwner\n          ? createTask(getTaskName(type))\n          : unknownOwnerDebugTask),\n    );\n  }\n}\n\nexport function jsxProdSignatureRunningInDevWithStaticChildren(\n  type,\n  config,\n  maybeKey,\n  source,\n  self,\n) {\n  if (__DEV__) {\n    const isStaticChildren = true;\n    const trackActualOwner =\n      __DEV__ &&\n      ReactSharedInternals.recentlyCreatedOwnerStacks++ < ownerStackLimit;\n    return jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      __DEV__ &&\n        (trackActualOwner\n          ? Error('react-stack-top-frame')\n          : unknownOwnerDebugStack),\n      __DEV__ &&\n        (trackActualOwner\n          ? createTask(getTaskName(type))\n          : unknownOwnerDebugTask),\n    );\n  }\n}\n\nconst didWarnAboutKeySpread = {};\n\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\nexport function jsxDEV(type, config, maybeKey, isStaticChildren, source, self) {\n  const trackActualOwner =\n    __DEV__ &&\n    ReactSharedInternals.recentlyCreatedOwnerStacks++ < ownerStackLimit;\n  return jsxDEVImpl(\n    type,\n    config,\n    maybeKey,\n    isStaticChildren,\n    source,\n    self,\n    __DEV__ &&\n      (trackActualOwner\n        ? Error('react-stack-top-frame')\n        : unknownOwnerDebugStack),\n    __DEV__ &&\n      (trackActualOwner\n        ? createTask(getTaskName(type))\n        : unknownOwnerDebugTask),\n  );\n}\n\nfunction jsxDEVImpl(\n  type,\n  config,\n  maybeKey,\n  isStaticChildren,\n  source,\n  self,\n  debugStack,\n  debugTask,\n) {\n  if (__DEV__) {\n    // We don't warn for invalid element type here because with owner stacks,\n    // we error in the renderer. The renderer is the only one that knows what\n    // types are valid for this particular renderer so we let it error there.\n\n    // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing\n    // errors. We don't want exception behavior to differ between dev and\n    // prod. (Rendering will throw with a helpful message and as soon as the\n    // type is fixed, the key warnings will appear.)\n    // With owner stacks, we no longer need the type here so this comment is\n    // no longer true. Which is why we can run this even for invalid types.\n    const children = config.children;\n    if (children !== undefined) {\n      if (isStaticChildren) {\n        if (isArray(children)) {\n          for (let i = 0; i < children.length; i++) {\n            validateChildKeys(children[i], type);\n          }\n\n          if (Object.freeze) {\n            Object.freeze(children);\n          }\n        } else {\n          console.error(\n            'React.jsx: Static children should always be an array. ' +\n              'You are likely explicitly calling React.jsxs or React.jsxDEV. ' +\n              'Use the Babel transform instead.',\n          );\n        }\n      } else {\n        validateChildKeys(children, type);\n      }\n    }\n\n    // Warn about key spread regardless of whether the type is valid.\n    if (hasOwnProperty.call(config, 'key')) {\n      const componentName = getComponentNameFromType(type);\n      const keys = Object.keys(config).filter(k => k !== 'key');\n      const beforeExample =\n        keys.length > 0\n          ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}'\n          : '{key: someKey}';\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        const afterExample =\n          keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n        console.error(\n          'A props object containing a \"key\" prop is being spread into JSX:\\n' +\n            '  let props = %s;\\n' +\n            '  <%s {...props} />\\n' +\n            'React keys must be passed directly to JSX without using spread:\\n' +\n            '  let props = %s;\\n' +\n            '  <%s key={someKey} {...props} />',\n          beforeExample,\n          componentName,\n          afterExample,\n          componentName,\n        );\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    let key = null;\n\n    // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n    if (maybeKey !== undefined) {\n      if (__DEV__) {\n        checkKeyStringCoercion(maybeKey);\n      }\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      if (__DEV__) {\n        checkKeyStringCoercion(config.key);\n      }\n      key = '' + config.key;\n    }\n\n    let props;\n    if (!('key' in config)) {\n      // If key was not spread in, we can reuse the original props object. This\n      // only works for `jsx`, not `createElement`, because `jsx` is a compiler\n      // target and the compiler always passes a new object. For `createElement`,\n      // we can't assume a new object is passed every time because it can be\n      // called manually.\n      //\n      // Spreading key is a warning in dev. In a future release, we will not\n      // remove a spread key from the props object. (But we'll still warn.) We'll\n      // always pass the object straight through.\n      props = config;\n    } else {\n      // We need to remove reserved props (key, prop, ref). Create a fresh props\n      // object and copy over all the non-reserved props. We don't use `delete`\n      // because in V8 it will deopt the object to dictionary mode.\n      props = {};\n      for (const propName in config) {\n        // Skip over reserved prop names\n        if (propName !== 'key') {\n          props[propName] = config[propName];\n        }\n      }\n    }\n\n    if (!disableDefaultPropsExceptForClasses) {\n      // Resolve default props\n      if (type && type.defaultProps) {\n        const defaultProps = type.defaultProps;\n        for (const propName in defaultProps) {\n          if (props[propName] === undefined) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n      }\n    }\n\n    if (key) {\n      const displayName =\n        typeof type === 'function'\n          ? type.displayName || type.name || 'Unknown'\n          : type;\n      defineKeyPropWarningGetter(props, displayName);\n    }\n\n    return ReactElement(\n      type,\n      key,\n      self,\n      source,\n      getOwner(),\n      props,\n      debugStack,\n      debugTask,\n    );\n  }\n}\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\nexport function createElement(type, config, children) {\n  if (__DEV__) {\n    // We don't warn for invalid element type here because with owner stacks,\n    // we error in the renderer. The renderer is the only one that knows what\n    // types are valid for this particular renderer so we let it error there.\n\n    // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing\n    // errors. We don't want exception behavior to differ between dev and\n    // prod. (Rendering will throw with a helpful message and as soon as the\n    // type is fixed, the key warnings will appear.)\n    for (let i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n\n    // Unlike the jsx() runtime, createElement() doesn't warn about key spread.\n  }\n\n  let propName;\n\n  // Reserved names are extracted\n  const props = {};\n\n  let key = null;\n\n  if (config != null) {\n    if (__DEV__) {\n      if (\n        !didWarnAboutOldJSXRuntime &&\n        '__self' in config &&\n        // Do not assume this is the result of an oudated JSX transform if key\n        // is present, because the modern JSX transform sometimes outputs\n        // createElement to preserve precedence between a static key and a\n        // spread key. To avoid false positive warnings, we never warn if\n        // there's a key.\n        !('key' in config)\n      ) {\n        didWarnAboutOldJSXRuntime = true;\n        console.warn(\n          'Your app (or one of its dependencies) is using an outdated JSX ' +\n            'transform. Update to the modern JSX transform for ' +\n            'faster performance: https://react.dev/link/new-jsx-transform',\n        );\n      }\n    }\n\n    if (hasValidKey(config)) {\n      if (__DEV__) {\n        checkKeyStringCoercion(config.key);\n      }\n      key = '' + config.key;\n    }\n\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (\n        hasOwnProperty.call(config, propName) &&\n        // Skip over reserved prop names\n        propName !== 'key' &&\n        // Even though we don't use these anymore in the runtime, we don't want\n        // them to appear as props, so in createElement we filter them out.\n        // We don't have to do this in the jsx() runtime because the jsx()\n        // transform never passed these as props; it used separate arguments.\n        propName !== '__self' &&\n        propName !== '__source'\n      ) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  const childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    const childArray = Array(childrenLength);\n    for (let i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    if (__DEV__) {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    const defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  if (__DEV__) {\n    if (key) {\n      const displayName =\n        typeof type === 'function'\n          ? type.displayName || type.name || 'Unknown'\n          : type;\n      defineKeyPropWarningGetter(props, displayName);\n    }\n  }\n  const trackActualOwner =\n    __DEV__ &&\n    ReactSharedInternals.recentlyCreatedOwnerStacks++ < ownerStackLimit;\n  return ReactElement(\n    type,\n    key,\n    undefined,\n    undefined,\n    getOwner(),\n    props,\n    __DEV__ &&\n      (trackActualOwner\n        ? Error('react-stack-top-frame')\n        : unknownOwnerDebugStack),\n    __DEV__ &&\n      (trackActualOwner\n        ? createTask(getTaskName(type))\n        : unknownOwnerDebugTask),\n  );\n}\n\nexport function cloneAndReplaceKey(oldElement, newKey) {\n  const clonedElement = ReactElement(\n    oldElement.type,\n    newKey,\n    undefined,\n    undefined,\n    !__DEV__ ? undefined : oldElement._owner,\n    oldElement.props,\n    __DEV__ && oldElement._debugStack,\n    __DEV__ && oldElement._debugTask,\n  );\n  if (__DEV__) {\n    // The cloned element should inherit the original element's key validation.\n    if (oldElement._store) {\n      clonedElement._store.validated = oldElement._store.validated;\n    }\n  }\n  return clonedElement;\n}\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\nexport function cloneElement(element, config, children) {\n  if (element === null || element === undefined) {\n    throw new Error(\n      `The argument must be a React element, but you passed ${element}.`,\n    );\n  }\n\n  let propName;\n\n  // Original props are copied\n  const props = assign({}, element.props);\n\n  // Reserved names are extracted\n  let key = element.key;\n\n  // Owner will be preserved, unless ref is overridden\n  let owner = !__DEV__ ? undefined : element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      owner = __DEV__ ? getOwner() : undefined;\n    }\n    if (hasValidKey(config)) {\n      if (__DEV__) {\n        checkKeyStringCoercion(config.key);\n      }\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    let defaultProps;\n    if (\n      !disableDefaultPropsExceptForClasses &&\n      element.type &&\n      element.type.defaultProps\n    ) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (\n        hasOwnProperty.call(config, propName) &&\n        // Skip over reserved prop names\n        propName !== 'key' &&\n        // ...and maybe these, too, though we currently rely on them for\n        // warnings and debug information in dev. Need to decide if we're OK\n        // with dropping them. In the jsx() runtime it's not an issue because\n        // the data gets passed as separate arguments instead of props, but\n        // it would be nice to stop relying on them entirely so we can drop\n        // them from the internal Fiber field.\n        propName !== '__self' &&\n        propName !== '__source' &&\n        // Undefined `ref` is ignored by cloneElement. We treat it the same as\n        // if the property were missing. This is mostly for\n        // backwards compatibility.\n        !(propName === 'ref' && config.ref === undefined)\n      ) {\n        if (\n          !disableDefaultPropsExceptForClasses &&\n          config[propName] === undefined &&\n          defaultProps !== undefined\n        ) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  const childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    const childArray = Array(childrenLength);\n    for (let i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  const clonedElement = ReactElement(\n    element.type,\n    key,\n    undefined,\n    undefined,\n    owner,\n    props,\n    __DEV__ && element._debugStack,\n    __DEV__ && element._debugTask,\n  );\n\n  for (let i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], clonedElement.type);\n  }\n\n  return clonedElement;\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (__DEV__) {\n    // With owner stacks is, no warnings happens. All we do is\n    // mark elements as being in a valid static child position so they\n    // don't need keys.\n    if (isValidElement(node)) {\n      if (node._store) {\n        node._store.validated = 1;\n      }\n    }\n  }\n}\n\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\nexport function isValidElement(object) {\n  return (\n    typeof object === 'object' &&\n    object !== null &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  ReactNodeList,\n  Thenable,\n  PendingThenable,\n  FulfilledThenable,\n  RejectedThenable,\n} from 'shared/ReactTypes';\n\nimport isArray from 'shared/isArray';\nimport {\n  getIteratorFn,\n  REACT_ELEMENT_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_PORTAL_TYPE,\n} from 'shared/ReactSymbols';\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\n\nimport {isValidElement, cloneAndReplaceKey} from './jsx/ReactJSXElement';\n\nconst SEPARATOR = '.';\nconst SUBSEPARATOR = ':';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\nfunction escape(key: string): string {\n  const escapeRegex = /[=:]/g;\n  const escaperLookup = {\n    '=': '=0',\n    ':': '=2',\n  };\n  const escapedString = key.replace(escapeRegex, function (match) {\n    // $FlowFixMe[invalid-computed-prop]\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nlet didWarnAboutMaps = false;\n\nconst userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text: string): string {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getElementKey(element: any, index: number): string {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    if (__DEV__) {\n      checkKeyStringCoercion(element.key);\n    }\n    return escape('' + element.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\nfunction noop() {}\n\nfunction resolveThenable<T>(thenable: Thenable<T>): T {\n  switch (thenable.status) {\n    case 'fulfilled': {\n      const fulfilledValue: T = thenable.value;\n      return fulfilledValue;\n    }\n    case 'rejected': {\n      const rejectedError = thenable.reason;\n      throw rejectedError;\n    }\n    default: {\n      if (typeof thenable.status === 'string') {\n        // Only instrument the thenable if the status if not defined. If\n        // it's defined, but an unknown value, assume it's been instrumented by\n        // some custom userspace implementation. We treat it as \"pending\".\n        // Attach a dummy listener, to ensure that any lazy initialization can\n        // happen. Flight lazily parses JSON when the value is actually awaited.\n        thenable.then(noop, noop);\n      } else {\n        // This is an uncached thenable that we haven't seen before.\n\n        // TODO: Detect infinite ping loops caused by uncached promises.\n\n        const pendingThenable: PendingThenable<T> = (thenable: any);\n        pendingThenable.status = 'pending';\n        pendingThenable.then(\n          fulfilledValue => {\n            if (thenable.status === 'pending') {\n              const fulfilledThenable: FulfilledThenable<T> = (thenable: any);\n              fulfilledThenable.status = 'fulfilled';\n              fulfilledThenable.value = fulfilledValue;\n            }\n          },\n          (error: mixed) => {\n            if (thenable.status === 'pending') {\n              const rejectedThenable: RejectedThenable<T> = (thenable: any);\n              rejectedThenable.status = 'rejected';\n              rejectedThenable.reason = error;\n            }\n          },\n        );\n      }\n\n      // Check one more time in case the thenable resolved synchronously.\n      switch ((thenable: Thenable<T>).status) {\n        case 'fulfilled': {\n          const fulfilledThenable: FulfilledThenable<T> = (thenable: any);\n          return fulfilledThenable.value;\n        }\n        case 'rejected': {\n          const rejectedThenable: RejectedThenable<T> = (thenable: any);\n          const rejectedError = rejectedThenable.reason;\n          throw rejectedError;\n        }\n      }\n    }\n  }\n  throw thenable;\n}\n\nfunction mapIntoArray(\n  children: ?ReactNodeList,\n  array: Array<React$Node>,\n  escapedPrefix: string,\n  nameSoFar: string,\n  callback: (?React$Node) => ?ReactNodeList,\n): number {\n  const type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  let invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'bigint':\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n      case 'object':\n        switch ((children: any).$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n            break;\n          case REACT_LAZY_TYPE:\n            const payload = (children: any)._payload;\n            const init = (children: any)._init;\n            return mapIntoArray(\n              init(payload),\n              array,\n              escapedPrefix,\n              nameSoFar,\n              callback,\n            );\n        }\n    }\n  }\n\n  if (invokeCallback) {\n    const child = children;\n    let mappedChild = callback(child);\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n    const childKey =\n      nameSoFar === '' ? SEPARATOR + getElementKey(child, 0) : nameSoFar;\n    if (isArray(mappedChild)) {\n      let escapedChildKey = '';\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n      mapIntoArray(mappedChild, array, escapedChildKey, '', c => c);\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        if (__DEV__) {\n          // The `if` statement here prevents auto-disabling of the safe\n          // coercion ESLint rule, so we must manually disable it below.\n          // $FlowFixMe[incompatible-type] Flow incorrectly thinks React.Portal doesn't have a key\n          if (mappedChild.key != null) {\n            if (!child || child.key !== mappedChild.key) {\n              checkKeyStringCoercion(mappedChild.key);\n            }\n          }\n        }\n        const newChild = cloneAndReplaceKey(\n          mappedChild,\n          // Keep both the (mapped) and old keys if they differ, just as\n          // traverseAllChildren used to do for objects as children\n          escapedPrefix +\n            // $FlowFixMe[incompatible-type] Flow incorrectly thinks React.Portal doesn't have a key\n            (mappedChild.key != null &&\n            (!child || child.key !== mappedChild.key)\n              ? escapeUserProvidedKey(\n                  // $FlowFixMe[unsafe-addition]\n                  '' + mappedChild.key, // eslint-disable-line react-internal/safe-string-coercion\n                ) + '/'\n              : '') +\n            childKey,\n        );\n        if (__DEV__) {\n          // If `child` was an element without a `key`, we need to validate if\n          // it should have had a `key`, before assigning one to `mappedChild`.\n          // $FlowFixMe[incompatible-type] Flow incorrectly thinks React.Portal doesn't have a key\n          if (\n            nameSoFar !== '' &&\n            child != null &&\n            isValidElement(child) &&\n            child.key == null\n          ) {\n            // We check truthiness of `child._store.validated` instead of being\n            // inequal to `1` to provide a bit of backward compatibility for any\n            // libraries (like `fbt`) which may be hacking this property.\n            if (child._store && !child._store.validated) {\n              // Mark this child as having failed validation, but let the actual\n              // renderer print the warning later.\n              newChild._store.validated = 2;\n            }\n          }\n        }\n        mappedChild = newChild;\n      }\n      array.push(mappedChild);\n    }\n    return 1;\n  }\n\n  let child;\n  let nextName;\n  let subtreeCount = 0; // Count of children found in the current subtree.\n  const nextNamePrefix =\n    nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (isArray(children)) {\n    for (let i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(\n        child,\n        array,\n        escapedPrefix,\n        nextName,\n        callback,\n      );\n    }\n  } else {\n    const iteratorFn = getIteratorFn(children);\n    if (typeof iteratorFn === 'function') {\n      const iterableChildren: Iterable<React$Node> & {\n        entries: any,\n      } = (children: any);\n\n      if (__DEV__) {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            console.warn(\n              'Using Maps as children is not supported. ' +\n                'Use an array of keyed ReactElements instead.',\n            );\n          }\n          didWarnAboutMaps = true;\n        }\n      }\n\n      const iterator = iteratorFn.call(iterableChildren);\n      let step;\n      let ii = 0;\n      // $FlowFixMe[incompatible-use] `iteratorFn` might return null according to typing.\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(\n          child,\n          array,\n          escapedPrefix,\n          nextName,\n          callback,\n        );\n      }\n    } else if (type === 'object') {\n      if (typeof (children: any).then === 'function') {\n        return mapIntoArray(\n          resolveThenable((children: any)),\n          array,\n          escapedPrefix,\n          nameSoFar,\n          callback,\n        );\n      }\n\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      const childrenString = String((children: any));\n\n      throw new Error(\n        `Objects are not valid as a React child (found: ${\n          childrenString === '[object Object]'\n            ? 'object with keys {' +\n              Object.keys((children: any)).join(', ') +\n              '}'\n            : childrenString\n        }). ` +\n          'If you meant to render a collection of children, use an array ' +\n          'instead.',\n      );\n    }\n  }\n\n  return subtreeCount;\n}\n\ntype MapFunc = (child: ?React$Node, index: number) => ?ReactNodeList;\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(\n  children: ?ReactNodeList,\n  func: MapFunc,\n  context: mixed,\n): ?Array<React$Node> {\n  if (children == null) {\n    // $FlowFixMe limitation refining abstract types in Flow\n    return children;\n  }\n  const result: Array<React$Node> = [];\n  let count = 0;\n  mapIntoArray(children, result, '', '', function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children: ?ReactNodeList): number {\n  let n = 0;\n  mapChildren(children, () => {\n    n++;\n    // Don't return anything\n  });\n  return n;\n}\n\ntype ForEachFunc = (child: ?React$Node) => void;\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(\n  children: ?ReactNodeList,\n  forEachFunc: ForEachFunc,\n  forEachContext: mixed,\n): void {\n  mapChildren(\n    children,\n    // $FlowFixMe[missing-this-annot]\n    function () {\n      forEachFunc.apply(this, arguments);\n      // Don't return anything.\n    },\n    forEachContext,\n  );\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\nfunction toArray(children: ?ReactNodeList): Array<React$Node> {\n  return mapChildren(children, child => child) || [];\n}\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild<T>(children: T): T {\n  if (!isValidElement(children)) {\n    throw new Error(\n      'React.Children.only expected to receive a single React element child.',\n    );\n  }\n\n  return children;\n}\n\nexport {\n  forEachChildren as forEach,\n  mapChildren as map,\n  countChildren as count,\n  onlyChild as only,\n  toArray,\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  REACT_PROVIDER_TYPE,\n  REACT_CONSUMER_TYPE,\n  REACT_CONTEXT_TYPE,\n} from 'shared/ReactSymbols';\n\nimport type {ReactContext} from 'shared/ReactTypes';\nimport {enableRenderableContext} from 'shared/ReactFeatureFlags';\n\nexport function createContext<T>(defaultValue: T): ReactContext<T> {\n  // TODO: Second argument used to be an optional `calculateChangedBits`\n  // function. Warn to reserve for future use?\n\n  const context: ReactContext<T> = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: (null: any),\n    Consumer: (null: any),\n  };\n\n  if (enableRenderableContext) {\n    context.Provider = context;\n    context.Consumer = {\n      $$typeof: REACT_CONSUMER_TYPE,\n      _context: context,\n    };\n  } else {\n    (context: any).Provider = {\n      $$typeof: REACT_PROVIDER_TYPE,\n      _context: context,\n    };\n    if (__DEV__) {\n      const Consumer: any = {\n        $$typeof: REACT_CONTEXT_TYPE,\n        _context: context,\n      };\n      Object.defineProperties(Consumer, {\n        Provider: {\n          get() {\n            return context.Provider;\n          },\n          set(_Provider: any) {\n            context.Provider = _Provider;\n          },\n        },\n        _currentValue: {\n          get() {\n            return context._currentValue;\n          },\n          set(_currentValue: T) {\n            context._currentValue = _currentValue;\n          },\n        },\n        _currentValue2: {\n          get() {\n            return context._currentValue2;\n          },\n          set(_currentValue2: T) {\n            context._currentValue2 = _currentValue2;\n          },\n        },\n        _threadCount: {\n          get() {\n            return context._threadCount;\n          },\n          set(_threadCount: number) {\n            context._threadCount = _threadCount;\n          },\n        },\n        Consumer: {\n          get() {\n            return context.Consumer;\n          },\n        },\n        displayName: {\n          get() {\n            return context.displayName;\n          },\n          set(displayName: void | string) {},\n        },\n      });\n      (context: any).Consumer = Consumer;\n    } else {\n      (context: any).Consumer = context;\n    }\n  }\n\n  if (__DEV__) {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Wakeable, Thenable, ReactDebugInfo} from 'shared/ReactTypes';\n\nimport {REACT_LAZY_TYPE} from 'shared/ReactSymbols';\nimport {disableDefaultPropsExceptForClasses} from 'shared/ReactFeatureFlags';\n\nconst Uninitialized = -1;\nconst Pending = 0;\nconst Resolved = 1;\nconst Rejected = 2;\n\ntype UninitializedPayload<T> = {\n  _status: -1,\n  _result: () => Thenable<{default: T, ...}>,\n};\n\ntype PendingPayload = {\n  _status: 0,\n  _result: Wakeable,\n};\n\ntype ResolvedPayload<T> = {\n  _status: 1,\n  _result: {default: T, ...},\n};\n\ntype RejectedPayload = {\n  _status: 2,\n  _result: mixed,\n};\n\ntype Payload<T> =\n  | UninitializedPayload<T>\n  | PendingPayload\n  | ResolvedPayload<T>\n  | RejectedPayload;\n\nexport type LazyComponent<T, P> = {\n  $$typeof: symbol | number,\n  _payload: P,\n  _init: (payload: P) => T,\n  _debugInfo?: null | ReactDebugInfo,\n};\n\nfunction lazyInitializer<T>(payload: Payload<T>): T {\n  if (payload._status === Uninitialized) {\n    const ctor = payload._result;\n    const thenable = ctor();\n    // Transition to the next state.\n    // This might throw either because it's missing or throws. If so, we treat it\n    // as still uninitialized and try again next time. Which is the same as what\n    // happens if the ctor or any wrappers processing the ctor throws. This might\n    // end up fixing it if the resolution was a concurrency bug.\n    thenable.then(\n      moduleObject => {\n        if (\n          (payload: Payload<T>)._status === Pending ||\n          payload._status === Uninitialized\n        ) {\n          // Transition to the next state.\n          const resolved: ResolvedPayload<T> = (payload: any);\n          resolved._status = Resolved;\n          resolved._result = moduleObject;\n        }\n      },\n      error => {\n        if (\n          (payload: Payload<T>)._status === Pending ||\n          payload._status === Uninitialized\n        ) {\n          // Transition to the next state.\n          const rejected: RejectedPayload = (payload: any);\n          rejected._status = Rejected;\n          rejected._result = error;\n        }\n      },\n    );\n    if (payload._status === Uninitialized) {\n      // In case, we're still uninitialized, then we're waiting for the thenable\n      // to resolve. Set it as pending in the meantime.\n      const pending: PendingPayload = (payload: any);\n      pending._status = Pending;\n      pending._result = thenable;\n    }\n  }\n  if (payload._status === Resolved) {\n    const moduleObject = payload._result;\n    if (__DEV__) {\n      if (moduleObject === undefined) {\n        console.error(\n          'lazy: Expected the result of a dynamic imp' +\n            'ort() call. ' +\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' +\n            \"ort('./MyComponent'))\\n\\n\" +\n            'Did you accidentally put curly braces around the import?',\n          moduleObject,\n        );\n      }\n    }\n    if (__DEV__) {\n      if (!('default' in moduleObject)) {\n        console.error(\n          'lazy: Expected the result of a dynamic imp' +\n            'ort() call. ' +\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' +\n            \"ort('./MyComponent'))\",\n          moduleObject,\n        );\n      }\n    }\n    return moduleObject.default;\n  } else {\n    throw payload._result;\n  }\n}\n\nexport function lazy<T>(\n  ctor: () => Thenable<{default: T, ...}>,\n): LazyComponent<T, Payload<T>> {\n  const payload: Payload<T> = {\n    // We use these fields to store the result.\n    _status: Uninitialized,\n    _result: ctor,\n  };\n\n  const lazyType: LazyComponent<T, Payload<T>> = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer,\n  };\n\n  if (!disableDefaultPropsExceptForClasses) {\n    if (__DEV__) {\n      // In production, this would just set it on the object.\n      let defaultProps;\n      // $FlowFixMe[prop-missing]\n      Object.defineProperties(lazyType, {\n        defaultProps: {\n          configurable: true,\n          get() {\n            return defaultProps;\n          },\n          // $FlowFixMe[missing-local-annot]\n          set(newDefaultProps) {\n            console.error(\n              'It is not supported to assign `defaultProps` to ' +\n                'a lazy component import. Either specify them where the component ' +\n                'is defined, or create a wrapping component around it.',\n            );\n            defaultProps = newDefaultProps;\n            // Match production behavior more closely:\n            // $FlowFixMe[prop-missing]\n            Object.defineProperty(lazyType, 'defaultProps', {\n              enumerable: true,\n            });\n          },\n        },\n      });\n    }\n  }\n\n  return lazyType;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\nimport {REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE} from 'shared/ReactSymbols';\n\nexport function forwardRef<Props, ElementType: React$ElementType>(\n  render: (\n    props: Props,\n    ref: React$RefSetter<React$ElementRef<ElementType>>,\n  ) => React$Node,\n) {\n  if (__DEV__) {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      console.error(\n        'forwardRef requires a render function but received a `memo` ' +\n          'component. Instead of forwardRef(memo(...)), use ' +\n          'memo(forwardRef(...)).',\n      );\n    } else if (typeof render !== 'function') {\n      console.error(\n        'forwardRef requires a render function but was given %s.',\n        render === null ? 'null' : typeof render,\n      );\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        console.error(\n          'forwardRef render functions accept exactly two parameters: props and ref. %s',\n          render.length === 1\n            ? 'Did you forget to use the ref parameter?'\n            : 'Any additional parameter will be undefined.',\n        );\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null) {\n        console.error(\n          'forwardRef render functions do not support defaultProps. ' +\n            'Did you accidentally pass a React component?',\n        );\n      }\n    }\n  }\n\n  const elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render,\n  };\n  if (__DEV__) {\n    let ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name;\n\n        // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.forwardRef((props, ref) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n        if (!render.name && !render.displayName) {\n          Object.defineProperty(render, 'name', {\n            value: name,\n          });\n          render.displayName = name;\n        }\n      },\n    });\n  }\n  return elementType;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\nimport {REACT_MEMO_TYPE} from 'shared/ReactSymbols';\n\nexport function memo<Props>(\n  type: React$ElementType,\n  compare?: (oldProps: Props, newProps: Props) => boolean,\n) {\n  if (__DEV__) {\n    if (type == null) {\n      console.error(\n        'memo: The first argument must be a component. Instead ' +\n          'received: %s',\n        type === null ? 'null' : typeof type,\n      );\n    }\n  }\n  const elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type,\n    compare: compare === undefined ? null : compare,\n  };\n  if (__DEV__) {\n    let ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name;\n\n        // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.memo((props) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n        if (!type.name && !type.displayName) {\n          Object.defineProperty(type, 'name', {\n            value: name,\n          });\n          type.displayName = name;\n        }\n      },\n    });\n  }\n  return elementType;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {disableClientCache} from 'shared/ReactFeatureFlags';\nimport {cache as cacheImpl} from './ReactCacheImpl';\n\nexport function noopCache<A: Iterable<mixed>, T>(fn: (...A) => T): (...A) => T {\n  // On the client (i.e. not a Server Components environment) `cache` has\n  // no caching behavior. We just return the function as-is.\n  //\n  // We intend to implement client caching in a future major release. In the\n  // meantime, it's only exposed as an API so that Shared Components can use\n  // per-request caching on the server without breaking on the client. But it\n  // does mean they need to be aware of the behavioral difference.\n  //\n  // The rest of the behavior is the same as the server implementation — it\n  // returns a new reference, extra properties like `displayName` are not\n  // preserved, the length of the new function is 0, etc. That way apps can't\n  // accidentally depend on those details.\n  return function () {\n    // $FlowFixMe[incompatible-call]: We don't want to use rest arguments since we transpile the code.\n    return fn.apply(null, arguments);\n  };\n}\n\nexport const cache: typeof noopCache = disableClientCache\n  ? noopCache\n  : cacheImpl;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\nimport type {\n  ReactContext,\n  StartTransitionOptions,\n  Usable,\n  Awaited,\n  StartGesture,\n} from 'shared/ReactTypes';\nimport {REACT_CONSUMER_TYPE} from 'shared/ReactSymbols';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nimport {\n  enableUseEffectCRUDOverload,\n  enableSwipeTransition,\n} from 'shared/ReactFeatureFlags';\n\ntype BasicStateAction<S> = (S => S) | S;\ntype Dispatch<A> = A => void;\n\nfunction resolveDispatcher() {\n  const dispatcher = ReactSharedInternals.H;\n  if (__DEV__) {\n    if (dispatcher === null) {\n      console.error(\n        'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\n          ' one of the following reasons:\\n' +\n          '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\n          '2. You might be breaking the Rules of Hooks\\n' +\n          '3. You might have more than one copy of React in the same app\\n' +\n          'See https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.',\n      );\n    }\n  }\n  // Will result in a null access error if accessed outside render phase. We\n  // intentionally don't throw our own error because this is in a hot path.\n  // Also helps ensure this is inlined.\n  return ((dispatcher: any): Dispatcher);\n}\n\nexport function getCacheForType<T>(resourceType: () => T): T {\n  const dispatcher = ReactSharedInternals.A;\n  if (!dispatcher) {\n    // If there is no dispatcher, then we treat this as not being cached.\n    return resourceType();\n  }\n  return dispatcher.getCacheForType(resourceType);\n}\n\nexport function useContext<T>(Context: ReactContext<T>): T {\n  const dispatcher = resolveDispatcher();\n  if (__DEV__) {\n    if (Context.$$typeof === REACT_CONSUMER_TYPE) {\n      console.error(\n        'Calling useContext(Context.Consumer) is not supported and will cause bugs. ' +\n          'Did you mean to call useContext(Context) instead?',\n      );\n    }\n  }\n  return dispatcher.useContext(Context);\n}\n\nexport function useState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\n\nexport function useReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\n\nexport function useRef<T>(initialValue: T): {current: T} {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\n\nexport function useEffect(\n  create: (() => (() => void) | void) | (() => {...} | void | null),\n  createDeps: Array<mixed> | void | null,\n  update?: ((resource: {...} | void | null) => void) | void,\n  updateDeps?: Array<mixed> | void | null,\n  destroy?: ((resource: {...} | void | null) => void) | void,\n): void {\n  if (__DEV__) {\n    if (create == null) {\n      console.warn(\n        'React Hook useEffect requires an effect callback. Did you forget to pass a callback to the hook?',\n      );\n    }\n  }\n\n  const dispatcher = resolveDispatcher();\n  if (\n    enableUseEffectCRUDOverload &&\n    (typeof update === 'function' || typeof destroy === 'function')\n  ) {\n    // $FlowFixMe[not-a-function] This is unstable, thus optional\n    return dispatcher.useEffect(\n      create,\n      createDeps,\n      update,\n      updateDeps,\n      destroy,\n    );\n  } else if (typeof update === 'function') {\n    throw new Error(\n      'useEffect CRUD overload is not enabled in this build of React.',\n    );\n  }\n  return dispatcher.useEffect(create, createDeps);\n}\n\nexport function useInsertionEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    if (create == null) {\n      console.warn(\n        'React Hook useInsertionEffect requires an effect callback. Did you forget to pass a callback to the hook?',\n      );\n    }\n  }\n\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useInsertionEffect(create, deps);\n}\n\nexport function useLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    if (create == null) {\n      console.warn(\n        'React Hook useLayoutEffect requires an effect callback. Did you forget to pass a callback to the hook?',\n      );\n    }\n  }\n\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\n\nexport function useCallback<T>(\n  callback: T,\n  deps: Array<mixed> | void | null,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\n\nexport function useMemo<T>(\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\n\nexport function useImperativeHandle<T>(\n  ref: {current: T | null} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\n\nexport function useDebugValue<T>(\n  value: T,\n  formatterFn: ?(value: T) => mixed,\n): void {\n  if (__DEV__) {\n    const dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\n\nexport function useTransition(): [\n  boolean,\n  (callback: () => void, options?: StartTransitionOptions) => void,\n] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useTransition();\n}\n\nexport function useDeferredValue<T>(value: T, initialValue?: T): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value, initialValue);\n}\n\nexport function useId(): string {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useId();\n}\n\nexport function useSyncExternalStore<T>(\n  subscribe: (() => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot,\n  );\n}\n\nexport function useCacheRefresh(): <T>(?() => T, ?T) => void {\n  const dispatcher = resolveDispatcher();\n  // $FlowFixMe[not-a-function] This is unstable, thus optional\n  return dispatcher.useCacheRefresh();\n}\n\nexport function use<T>(usable: Usable<T>): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.use(usable);\n}\n\nexport function useMemoCache(size: number): Array<mixed> {\n  const dispatcher = resolveDispatcher();\n  // $FlowFixMe[not-a-function] This is unstable, thus optional\n  return dispatcher.useMemoCache(size);\n}\n\nexport function useEffectEvent<Args, F: (...Array<Args>) => mixed>(\n  callback: F,\n): F {\n  const dispatcher = resolveDispatcher();\n  // $FlowFixMe[not-a-function] This is unstable, thus optional\n  return dispatcher.useEffectEvent(callback);\n}\n\nexport function useOptimistic<S, A>(\n  passthrough: S,\n  reducer: ?(S, A) => S,\n): [S, (A) => void] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useOptimistic(passthrough, reducer);\n}\n\nexport function useActionState<S, P>(\n  action: (Awaited<S>, P) => S,\n  initialState: Awaited<S>,\n  permalink?: string,\n): [Awaited<S>, (P) => void, boolean] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useActionState(action, initialState, permalink);\n}\n\nexport function useSwipeTransition<T>(\n  previous: T,\n  current: T,\n  next: T,\n): [T, StartGesture] {\n  if (!enableSwipeTransition) {\n    throw new Error('Not implemented.');\n  }\n  const dispatcher = resolveDispatcher();\n  // $FlowFixMe[not-a-function] This is unstable, thus optional\n  return dispatcher.useSwipeTransition(previous, current, next);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst reportGlobalError: (error: mixed) => void =\n  typeof reportError === 'function'\n    ? // In modern browsers, reportError will dispatch an error event,\n      // emulating an uncaught JavaScript error.\n      reportError\n    : error => {\n        if (\n          typeof window === 'object' &&\n          typeof window.ErrorEvent === 'function'\n        ) {\n          // Browser Polyfill\n          const message =\n            typeof error === 'object' &&\n            error !== null &&\n            typeof error.message === 'string'\n              ? // eslint-disable-next-line react-internal/safe-string-coercion\n                String(error.message)\n              : // eslint-disable-next-line react-internal/safe-string-coercion\n                String(error);\n          const event = new window.ErrorEvent('error', {\n            bubbles: true,\n            cancelable: true,\n            message: message,\n            error: error,\n          });\n          const shouldLog = window.dispatchEvent(event);\n          if (!shouldLog) {\n            return;\n          }\n        } else if (\n          typeof process === 'object' &&\n          // $FlowFixMe[method-unbinding]\n          typeof process.emit === 'function'\n        ) {\n          // Node Polyfill\n          process.emit('uncaughtException', error);\n          return;\n        }\n        console['error'](error);\n      };\n\nexport default reportGlobalError;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nimport type {BatchConfigTransition} from 'react-reconciler/src/ReactFiberTracingMarkerComponent';\nimport type {StartTransitionOptions} from 'shared/ReactTypes';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nimport {enableTransitionTracing} from 'shared/ReactFeatureFlags';\n\nimport reportGlobalError from 'shared/reportGlobalError';\n\nexport function startTransition(\n  scope: () => void,\n  options?: StartTransitionOptions,\n) {\n  const prevTransition = ReactSharedInternals.T;\n  const currentTransition: BatchConfigTransition = {};\n  ReactSharedInternals.T = currentTransition;\n\n  if (__DEV__) {\n    currentTransition._updatedFibers = new Set();\n  }\n\n  if (enableTransitionTracing) {\n    if (options !== undefined && options.name !== undefined) {\n      currentTransition.name = options.name;\n      currentTransition.startTime = -1;\n    }\n  }\n\n  try {\n    const returnValue = scope();\n    const onStartTransitionFinish = ReactSharedInternals.S;\n    if (onStartTransitionFinish !== null) {\n      onStartTransitionFinish(currentTransition, returnValue);\n    }\n    if (\n      typeof returnValue === 'object' &&\n      returnValue !== null &&\n      typeof returnValue.then === 'function'\n    ) {\n      returnValue.then(noop, reportGlobalError);\n    }\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    warnAboutTransitionSubscriptions(prevTransition, currentTransition);\n    ReactSharedInternals.T = prevTransition;\n  }\n}\n\nfunction warnAboutTransitionSubscriptions(\n  prevTransition: BatchConfigTransition | null,\n  currentTransition: BatchConfigTransition,\n) {\n  if (__DEV__) {\n    if (prevTransition === null && currentTransition._updatedFibers) {\n      const updatedFibersCount = currentTransition._updatedFibers.size;\n      currentTransition._updatedFibers.clear();\n      if (updatedFibersCount > 10) {\n        console.warn(\n          'Detected a large number of updates inside startTransition. ' +\n            'If this is due to a subscription please re-write it to use React provided hooks. ' +\n            'Otherwise concurrent mode guarantees are off the table.',\n        );\n      }\n    }\n  }\n}\n\nfunction noop() {}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nexport type TransitionTypes = Array<string>;\n\nexport function addTransitionType(type: string): void {\n  const pendingTransitionTypes: null | TransitionTypes = ReactSharedInternals.V;\n  if (pendingTransitionTypes === null) {\n    ReactSharedInternals.V = [type];\n  } else if (pendingTransitionTypes.indexOf(type) === -1) {\n    pendingTransitionTypes.push(type);\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Thenable} from 'shared/ReactTypes';\nimport type {RendererTask} from './ReactSharedInternalsClient';\nimport ReactSharedInternals from './ReactSharedInternalsClient';\nimport queueMacrotask from 'shared/enqueueTask';\n\nimport {disableLegacyMode} from 'shared/ReactFeatureFlags';\n\n// `act` calls can be nested, so we track the depth. This represents the\n// number of `act` scopes on the stack.\nlet actScopeDepth = 0;\n\n// We only warn the first time you neglect to await an async `act` scope.\nlet didWarnNoAwaitAct = false;\n\nfunction aggregateErrors(errors: Array<mixed>): mixed {\n  if (errors.length > 1 && typeof AggregateError === 'function') {\n    // eslint-disable-next-line no-undef\n    return new AggregateError(errors);\n  }\n  return errors[0];\n}\n\nexport function act<T>(callback: () => T | Thenable<T>): Thenable<T> {\n  if (__DEV__) {\n    // When ReactSharedInternals.actQueue is not null, it signals to React that\n    // we're currently inside an `act` scope. React will push all its tasks to\n    // this queue instead of scheduling them with platform APIs.\n    //\n    // We set this to an empty array when we first enter an `act` scope, and\n    // only unset it once we've left the outermost `act` scope — remember that\n    // `act` calls can be nested.\n    //\n    // If we're already inside an `act` scope, reuse the existing queue.\n    const prevIsBatchingLegacy = !disableLegacyMode\n      ? ReactSharedInternals.isBatchingLegacy\n      : false;\n    const prevActQueue = ReactSharedInternals.actQueue;\n    const prevActScopeDepth = actScopeDepth;\n    actScopeDepth++;\n    const queue = (ReactSharedInternals.actQueue =\n      prevActQueue !== null ? prevActQueue : []);\n    // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n    // set to `true` while the given callback is executed, not for updates\n    // triggered during an async event, because this is how the legacy\n    // implementation of `act` behaved.\n    if (!disableLegacyMode) {\n      ReactSharedInternals.isBatchingLegacy = true;\n    }\n\n    let result;\n    // This tracks whether the `act` call is awaited. In certain cases, not\n    // awaiting it is a mistake, so we will detect that and warn.\n    let didAwaitActCall = false;\n    try {\n      // Reset this to `false` right before entering the React work loop. The\n      // only place we ever read this fields is just below, right after running\n      // the callback. So we don't need to reset after the callback runs.\n      if (!disableLegacyMode) {\n        ReactSharedInternals.didScheduleLegacyUpdate = false;\n      }\n      result = callback();\n      const didScheduleLegacyUpdate = !disableLegacyMode\n        ? ReactSharedInternals.didScheduleLegacyUpdate\n        : false;\n\n      // Replicate behavior of original `act` implementation in legacy mode,\n      // which flushed updates immediately after the scope function exits, even\n      // if it's an async function.\n      if (!prevIsBatchingLegacy && didScheduleLegacyUpdate) {\n        flushActQueue(queue);\n      }\n      // `isBatchingLegacy` gets reset using the regular stack, not the async\n      // one used to track `act` scopes. Why, you may be wondering? Because\n      // that's how it worked before version 18. Yes, it's confusing! We should\n      // delete legacy mode!!\n      if (!disableLegacyMode) {\n        ReactSharedInternals.isBatchingLegacy = prevIsBatchingLegacy;\n      }\n    } catch (error) {\n      // `isBatchingLegacy` gets reset using the regular stack, not the async\n      // one used to track `act` scopes. Why, you may be wondering? Because\n      // that's how it worked before version 18. Yes, it's confusing! We should\n      // delete legacy mode!!\n      ReactSharedInternals.thrownErrors.push(error);\n    }\n    if (ReactSharedInternals.thrownErrors.length > 0) {\n      if (!disableLegacyMode) {\n        ReactSharedInternals.isBatchingLegacy = prevIsBatchingLegacy;\n      }\n      popActScope(prevActQueue, prevActScopeDepth);\n      const thrownError = aggregateErrors(ReactSharedInternals.thrownErrors);\n      ReactSharedInternals.thrownErrors.length = 0;\n      throw thrownError;\n    }\n\n    if (\n      result !== null &&\n      typeof result === 'object' &&\n      // $FlowFixMe[method-unbinding]\n      typeof result.then === 'function'\n    ) {\n      // A promise/thenable was returned from the callback. Wait for it to\n      // resolve before flushing the queue.\n      //\n      // If `act` were implemented as an async function, this whole block could\n      // be a single `await` call. That's really the only difference between\n      // this branch and the next one.\n      const thenable = ((result: any): Thenable<T>);\n\n      // Warn if the an `act` call with an async scope is not awaited. In a\n      // future release, consider making this an error.\n      queueSeveralMicrotasks(() => {\n        if (!didAwaitActCall && !didWarnNoAwaitAct) {\n          didWarnNoAwaitAct = true;\n          console.error(\n            'You called act(async () => ...) without await. ' +\n              'This could lead to unexpected testing behaviour, ' +\n              'interleaving multiple act calls and mixing their ' +\n              'scopes. ' +\n              'You should - await act(async () => ...);',\n          );\n        }\n      });\n\n      return {\n        then(resolve: T => mixed, reject: mixed => mixed) {\n          didAwaitActCall = true;\n          thenable.then(\n            returnValue => {\n              popActScope(prevActQueue, prevActScopeDepth);\n              if (prevActScopeDepth === 0) {\n                // We're exiting the outermost `act` scope. Flush the queue.\n                try {\n                  flushActQueue(queue);\n                  queueMacrotask(() =>\n                    // Recursively flush tasks scheduled by a microtask.\n                    recursivelyFlushAsyncActWork(returnValue, resolve, reject),\n                  );\n                } catch (error) {\n                  // `thenable` might not be a real promise, and `flushActQueue`\n                  // might throw, so we need to wrap `flushActQueue` in a\n                  // try/catch.\n                  ReactSharedInternals.thrownErrors.push(error);\n                }\n                if (ReactSharedInternals.thrownErrors.length > 0) {\n                  const thrownError = aggregateErrors(\n                    ReactSharedInternals.thrownErrors,\n                  );\n                  ReactSharedInternals.thrownErrors.length = 0;\n                  reject(thrownError);\n                }\n              } else {\n                resolve(returnValue);\n              }\n            },\n            error => {\n              popActScope(prevActQueue, prevActScopeDepth);\n              if (ReactSharedInternals.thrownErrors.length > 0) {\n                const thrownError = aggregateErrors(\n                  ReactSharedInternals.thrownErrors,\n                );\n                ReactSharedInternals.thrownErrors.length = 0;\n                reject(thrownError);\n              } else {\n                reject(error);\n              }\n            },\n          );\n        },\n      };\n    } else {\n      const returnValue: T = (result: any);\n      // The callback is not an async function. Exit the current\n      // scope immediately.\n      popActScope(prevActQueue, prevActScopeDepth);\n      if (prevActScopeDepth === 0) {\n        // We're exiting the outermost `act` scope. Flush the queue.\n        flushActQueue(queue);\n\n        // If the queue is not empty, it implies that we intentionally yielded\n        // to the main thread, because something suspended. We will continue\n        // in an asynchronous task.\n        //\n        // Warn if something suspends but the `act` call is not awaited.\n        // In a future release, consider making this an error.\n        if (queue.length !== 0) {\n          queueSeveralMicrotasks(() => {\n            if (!didAwaitActCall && !didWarnNoAwaitAct) {\n              didWarnNoAwaitAct = true;\n              console.error(\n                'A component suspended inside an `act` scope, but the ' +\n                  '`act` call was not awaited. When testing React ' +\n                  'components that depend on asynchronous data, you must ' +\n                  'await the result:\\n\\n' +\n                  'await act(() => ...)',\n              );\n            }\n          });\n        }\n\n        // Like many things in this module, this is next part is confusing.\n        //\n        // We do not currently require every `act` call that is passed a\n        // callback to be awaited, through arguably we should. Since this\n        // callback was synchronous, we need to exit the current scope before\n        // returning.\n        //\n        // However, if thenable we're about to return *is* awaited, we'll\n        // immediately restore the current scope. So it shouldn't observable.\n        //\n        // This doesn't affect the case where the scope callback is async,\n        // because we always require those calls to be awaited.\n        //\n        // TODO: In a future version, consider always requiring all `act` calls\n        // to be awaited, regardless of whether the callback is sync or async.\n        ReactSharedInternals.actQueue = null;\n      }\n\n      if (ReactSharedInternals.thrownErrors.length > 0) {\n        const thrownError = aggregateErrors(ReactSharedInternals.thrownErrors);\n        ReactSharedInternals.thrownErrors.length = 0;\n        throw thrownError;\n      }\n\n      return {\n        then(resolve: T => mixed, reject: mixed => mixed) {\n          didAwaitActCall = true;\n          if (prevActScopeDepth === 0) {\n            // If the `act` call is awaited, restore the queue we were\n            // using before (see long comment above) so we can flush it.\n            ReactSharedInternals.actQueue = queue;\n            queueMacrotask(() =>\n              // Recursively flush tasks scheduled by a microtask.\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject),\n            );\n          } else {\n            resolve(returnValue);\n          }\n        },\n      };\n    }\n  } else {\n    throw new Error('act(...) is not supported in production builds of React.');\n  }\n}\n\nfunction popActScope(\n  prevActQueue: null | Array<RendererTask>,\n  prevActScopeDepth: number,\n) {\n  if (__DEV__) {\n    if (prevActScopeDepth !== actScopeDepth - 1) {\n      console.error(\n        'You seem to have overlapping act() calls, this is not supported. ' +\n          'Be sure to await previous act() calls before making a new one. ',\n      );\n    }\n    actScopeDepth = prevActScopeDepth;\n  }\n}\n\nfunction recursivelyFlushAsyncActWork<T>(\n  returnValue: T,\n  resolve: T => mixed,\n  reject: mixed => mixed,\n) {\n  if (__DEV__) {\n    // Check if any tasks were scheduled asynchronously.\n    const queue = ReactSharedInternals.actQueue;\n    if (queue !== null) {\n      if (queue.length !== 0) {\n        // Async tasks were scheduled, mostly likely in a microtask.\n        // Keep flushing until there are no more.\n        try {\n          flushActQueue(queue);\n          // The work we just performed may have schedule additional async\n          // tasks. Wait a macrotask and check again.\n          queueMacrotask(() =>\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject),\n          );\n          return;\n        } catch (error) {\n          // Leave remaining tasks on the queue if something throws.\n          ReactSharedInternals.thrownErrors.push(error);\n        }\n      } else {\n        // The queue is empty. We can finish.\n        ReactSharedInternals.actQueue = null;\n      }\n    }\n    if (ReactSharedInternals.thrownErrors.length > 0) {\n      const thrownError = aggregateErrors(ReactSharedInternals.thrownErrors);\n      ReactSharedInternals.thrownErrors.length = 0;\n      reject(thrownError);\n    } else {\n      resolve(returnValue);\n    }\n  }\n}\n\nlet isFlushing = false;\nfunction flushActQueue(queue: Array<RendererTask>) {\n  if (__DEV__) {\n    if (!isFlushing) {\n      // Prevent re-entrance.\n      isFlushing = true;\n      let i = 0;\n      try {\n        for (; i < queue.length; i++) {\n          let callback: RendererTask = queue[i];\n          do {\n            ReactSharedInternals.didUsePromise = false;\n            const continuation = callback(false);\n            if (continuation !== null) {\n              if (ReactSharedInternals.didUsePromise) {\n                // The component just suspended. Yield to the main thread in\n                // case the promise is already resolved. If so, it will ping in\n                // a microtask and we can resume without unwinding the stack.\n                queue[i] = callback;\n                queue.splice(0, i);\n                return;\n              }\n              callback = continuation;\n            } else {\n              break;\n            }\n          } while (true);\n        }\n        // We flushed the entire queue.\n        queue.length = 0;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        queue.splice(0, i + 1);\n        ReactSharedInternals.thrownErrors.push(error);\n      } finally {\n        isFlushing = false;\n      }\n    }\n  }\n}\n\n// Some of our warnings attempt to detect if the `act` call is awaited by\n// checking in an asynchronous task. Wait a few microtasks before checking. The\n// only reason one isn't sufficient is we want to accommodate the case where an\n// `act` call is returned from an async function without first being awaited,\n// since that's a somewhat common pattern. If you do this too many times in a\n// nested sequence, you might get a warning, but you can always fix by awaiting\n// the call.\n//\n// A macrotask would also work (and is the fallback) but depending on the test\n// environment it may cause the warning to fire too late.\nconst queueSeveralMicrotasks =\n  typeof queueMicrotask === 'function'\n    ? (callback: () => void) => {\n        queueMicrotask(() => queueMicrotask(callback));\n      }\n    : queueMacrotask;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport ReactVersion from 'shared/ReactVersion';\nimport {\n  REACT_FRAGMENT_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_LEGACY_HIDDEN_TYPE,\n  REACT_ACTIVITY_TYPE,\n  REACT_SCOPE_TYPE,\n  REACT_TRACING_MARKER_TYPE,\n  REACT_VIEW_TRANSITION_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {Component, PureComponent} from './ReactBaseClasses';\nimport {createRef} from './ReactCreateRef';\nimport {forEach, map, count, toArray, only} from './ReactChildren';\nimport {\n  createElement,\n  cloneElement,\n  isValidElement,\n} from './jsx/ReactJSXElement';\nimport {createContext} from './ReactContext';\nimport {lazy} from './ReactLazy';\nimport {forwardRef} from './ReactForwardRef';\nimport {memo} from './ReactMemo';\nimport {cache} from './ReactCacheClient';\nimport {postpone} from './ReactPostpone';\nimport {\n  getCacheForType,\n  useCallback,\n  useContext,\n  useEffect,\n  useEffectEvent,\n  useImperativeHandle,\n  useDebugValue,\n  useInsertionEffect,\n  useLayoutEffect,\n  useMemo,\n  useSyncExternalStore,\n  useReducer,\n  useRef,\n  useState,\n  useTransition,\n  useDeferredValue,\n  useId,\n  useCacheRefresh,\n  use,\n  useOptimistic,\n  useActionState,\n  useSwipeTransition,\n} from './ReactHooks';\nimport ReactSharedInternals from './ReactSharedInternalsClient';\nimport {startTransition} from './ReactStartTransition';\nimport {addTransitionType} from './ReactTransitionType';\nimport {act} from './ReactAct';\nimport {captureOwnerStack} from './ReactOwnerStack';\nimport * as ReactCompilerRuntime from './ReactCompilerRuntime';\n\nconst Children = {\n  map,\n  forEach,\n  count,\n  toArray,\n  only,\n};\n\nexport {\n  Children,\n  createRef,\n  Component,\n  PureComponent,\n  createContext,\n  forwardRef,\n  lazy,\n  memo,\n  cache,\n  postpone as unstable_postpone,\n  useCallback,\n  useContext,\n  useEffect,\n  useEffectEvent as experimental_useEffectEvent,\n  useImperativeHandle,\n  useDebugValue,\n  useInsertionEffect,\n  useLayoutEffect,\n  useMemo,\n  useOptimistic,\n  useActionState,\n  useSyncExternalStore,\n  useReducer,\n  useRef,\n  useState,\n  REACT_FRAGMENT_TYPE as Fragment,\n  REACT_PROFILER_TYPE as Profiler,\n  REACT_STRICT_MODE_TYPE as StrictMode,\n  REACT_SUSPENSE_TYPE as Suspense,\n  createElement,\n  cloneElement,\n  isValidElement,\n  ReactVersion as version,\n  ReactSharedInternals as __CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  ReactCompilerRuntime as __COMPILER_RUNTIME,\n  // Concurrent Mode\n  useTransition,\n  startTransition,\n  useDeferredValue,\n  REACT_SUSPENSE_LIST_TYPE as unstable_SuspenseList,\n  REACT_LEGACY_HIDDEN_TYPE as unstable_LegacyHidden,\n  REACT_ACTIVITY_TYPE as unstable_Activity,\n  getCacheForType as unstable_getCacheForType,\n  useCacheRefresh as unstable_useCacheRefresh,\n  use,\n  // enableScopeAPI\n  REACT_SCOPE_TYPE as unstable_Scope,\n  // enableTransitionTracing\n  REACT_TRACING_MARKER_TYPE as unstable_TracingMarker,\n  // enableViewTransition\n  REACT_VIEW_TRANSITION_TYPE as unstable_ViewTransition,\n  addTransitionType as unstable_addTransitionType,\n  // enableSwipeTransition\n  useSwipeTransition as unstable_useSwipeTransition,\n  // DEV-only\n  useId,\n  act,\n  captureOwnerStack,\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nimport {REACT_FRAGMENT_TYPE} from 'shared/ReactSymbols';\nimport {\n  jsxProd,\n  jsxProdSignatureRunningInDevWithDynamicChildren,\n  jsxProdSignatureRunningInDevWithStaticChildren,\n  jsxDEV as _jsxDEV,\n} from './ReactJSXElement';\n\nconst jsx: any = __DEV__\n  ? jsxProdSignatureRunningInDevWithDynamicChildren\n  : jsxProd;\n// we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\nconst jsxs: any = __DEV__\n  ? jsxProdSignatureRunningInDevWithStaticChildren\n  : jsxProd;\n\nconst jsxDEV: any = __DEV__ ? _jsxDEV : undefined;\n\nexport {REACT_FRAGMENT_TYPE as Fragment, jsx, jsxs, jsxDEV};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {captureOwnerStack as captureOwnerStackImpl} from './src/ReactClient';\n\nexport {\n  __CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  __COMPILER_RUNTIME,\n  act,\n  cache,\n  Children,\n  cloneElement,\n  Component,\n  createContext,\n  createElement,\n  createRef,\n  experimental_useEffectEvent,\n  forwardRef,\n  Fragment,\n  isValidElement,\n  lazy,\n  memo,\n  Profiler,\n  PureComponent,\n  startTransition,\n  StrictMode,\n  Suspense,\n  unstable_Activity,\n  unstable_getCacheForType,\n  unstable_LegacyHidden,\n  unstable_Scope,\n  unstable_SuspenseList,\n  unstable_ViewTransition,\n  unstable_TracingMarker,\n  unstable_addTransitionType,\n  unstable_useCacheRefresh,\n  use,\n  useActionState,\n  useCallback,\n  useContext,\n  useDebugValue,\n  useDeferredValue,\n  useEffect,\n  useId,\n  useImperativeHandle,\n  useInsertionEffect,\n  useLayoutEffect,\n  useMemo,\n  useOptimistic,\n  useReducer,\n  useRef,\n  useState,\n  useSyncExternalStore,\n  useTransition,\n  version,\n} from './src/ReactClient';\n\nexport {jsx, jsxs, jsxDEV} from './src/jsx/ReactJSX';\n\n// export for backwards compatibility during upgrade\nexport {useMemoCache as unstable_useMemoCache} from './src/ReactHooks';\n\n// export to match the name of the OSS function typically exported from\n// react/compiler-runtime\nexport {useMemoCache as c} from './src/ReactHooks';\n\n// Only export captureOwnerStack in development.\nlet captureOwnerStack: ?() => null | string;\nif (__DEV__) {\n  captureOwnerStack = captureOwnerStackImpl;\n}\n\nexport {captureOwnerStack};\n"],"names":["dynamicFeatureFlags","require","disableDefaultPropsExceptForClasses","enableRenderableContext","enableTransitionTracing","enableUseEffectCRUDOverload","renameElementSymbol","REACT_LEGACY_ELEMENT_TYPE","Symbol","for","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONSUMER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_SCOPE_TYPE","REACT_ACTIVITY_TYPE","REACT_LEGACY_HIDDEN_TYPE","REACT_TRACING_MARKER_TYPE","REACT_VIEW_TRANSITION_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactNoopUpdateQueue","isMounted","publicInstance","enqueueForceUpdate","callback","callerName","enqueueReplaceState","completeState","enqueueSetState","partialState","assign","Object","emptyObject","Component","props","context","updater","refs","prototype","isReactComponent","setState","Error","forceUpdate","ComponentDummy","PureComponent","pureComponentPrototype","constructor","isPureReactComponent","createRef","refObject","current","isArrayImpl","Array","isArray","a","ReactSharedInternals","H","A","T","S","V","hasOwnProperty","getOwner","hasValidRef","config","ref","undefined","hasValidKey","key","ReactElement","type","self","source","owner","debugStack","debugTask","refProp","element","$$typeof","jsxProd","maybeKey","propName","defaultProps","createElement","children","call","childrenLength","arguments","length","childArray","i","cloneAndReplaceKey","oldElement","newKey","clonedElement","cloneElement","isValidElement","object","SEPARATOR","SUBSEPARATOR","escape","escapeRegex","escaperLookup","escapedString","replace","match","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","getElementKey","index","toString","noop","resolveThenable","thenable","status","fulfilledValue","value","rejectedError","reason","then","pendingThenable","fulfilledThenable","error","rejectedThenable","mapIntoArray","array","escapedPrefix","nameSoFar","invokeCallback","payload","_payload","init","_init","child","mappedChild","childKey","escapedChildKey","c","newChild","push","nextName","subtreeCount","nextNamePrefix","iteratorFn","iterableChildren","step","ii","next","done","childrenString","String","keys","join","mapChildren","func","result","count","countChildren","n","forEachChildren","forEachFunc","forEachContext","apply","toArray","onlyChild","createContext","defaultValue","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","Uninitialized","Pending","Resolved","Rejected","lazyInitializer","_status","ctor","_result","moduleObject","resolved","rejected","pending","default","lazy","lazyType","forwardRef","render","elementType","memo","compare","noopCache","fn","cache","resolveDispatcher","dispatcher","getCacheForType","resourceType","useContext","Context","useState","initialState","useReducer","reducer","initialArg","useRef","initialValue","useEffect","create","createDeps","update","updateDeps","destroy","useInsertionEffect","deps","useLayoutEffect","useCallback","useMemo","useImperativeHandle","useDebugValue","formatterFn","useTransition","useDeferredValue","useId","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","useCacheRefresh","use","usable","useMemoCache","size","useEffectEvent","useOptimistic","passthrough","useActionState","action","permalink","reportGlobalError","reportError","window","ErrorEvent","message","event","bubbles","cancelable","shouldLog","dispatchEvent","process","emit","console","startTransition","scope","options","prevTransition","currentTransition","name","startTime","returnValue","onStartTransitionFinish","addTransitionType","pendingTransitionTypes","indexOf","act","Children","map","forEach","only","jsx","jsxs","jsxDEV","captureOwnerStack"],"mappings":"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"}