{"version":3,"file":"SchedulerPostTask-dev.js","sources":["../../packages/scheduler/src/SchedulerPriorities.js","../../packages/scheduler/src/forks/SchedulerPostTask.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\nexport type PriorityLevel = 0 | 1 | 2 | 3 | 4 | 5;\n\n// TODO: Use symbols?\nexport const NoPriority = 0;\nexport const ImmediatePriority = 1;\nexport const UserBlockingPriority = 2;\nexport const NormalPriority = 3;\nexport const LowPriority = 4;\nexport const IdlePriority = 5;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {PriorityLevel} from '../SchedulerPriorities';\n\ndeclare class TaskController {\n  constructor(options?: {priority?: string}): TaskController;\n  signal: mixed;\n  abort(): void;\n}\n\ntype PostTaskPriorityLevel = 'user-blocking' | 'user-visible' | 'background';\n\ntype CallbackNode = {\n  _controller: TaskController,\n};\n\nimport {\n  ImmediatePriority,\n  UserBlockingPriority,\n  NormalPriority,\n  LowPriority,\n  IdlePriority,\n} from '../SchedulerPriorities';\n\nexport {\n  ImmediatePriority as unstable_ImmediatePriority,\n  UserBlockingPriority as unstable_UserBlockingPriority,\n  NormalPriority as unstable_NormalPriority,\n  IdlePriority as unstable_IdlePriority,\n  LowPriority as unstable_LowPriority,\n};\n\n// Capture local references to native APIs, in case a polyfill overrides them.\nconst perf = window.performance;\nconst setTimeout = window.setTimeout;\n\n// Use experimental Chrome Scheduler postTask API.\nconst scheduler = global.scheduler;\n\nconst getCurrentTime: () => DOMHighResTimeStamp = perf.now.bind(perf);\n\nexport const unstable_now = getCurrentTime;\n\n// Scheduler periodically yields in case there is other work on the main\n// thread, like user events. By default, it yields multiple times per frame.\n// It does not attempt to align with frame boundaries, since most tasks don't\n// need to be frame aligned; for those that do, use requestAnimationFrame.\nconst yieldInterval = 5;\nlet deadline = 0;\n\nlet currentPriorityLevel_DEPRECATED = NormalPriority;\n\n// Always yield at the end of the frame.\nexport function unstable_shouldYield(): boolean {\n  return getCurrentTime() >= deadline;\n}\n\nexport function unstable_requestPaint() {\n  // Since we yield every frame regardless, `requestPaint` has no effect.\n}\n\ntype SchedulerCallback<T> = (didTimeout_DEPRECATED: boolean) =>\n  | T\n  // May return a continuation\n  | SchedulerCallback<T>;\n\nexport function unstable_scheduleCallback<T>(\n  priorityLevel: PriorityLevel,\n  callback: SchedulerCallback<T>,\n  options?: {delay?: number},\n): CallbackNode {\n  let postTaskPriority;\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n      postTaskPriority = 'user-blocking';\n      break;\n    case LowPriority:\n    case NormalPriority:\n      postTaskPriority = 'user-visible';\n      break;\n    case IdlePriority:\n      postTaskPriority = 'background';\n      break;\n    default:\n      postTaskPriority = 'user-visible';\n      break;\n  }\n\n  const controller = new TaskController({priority: postTaskPriority});\n  const postTaskOptions = {\n    delay: typeof options === 'object' && options !== null ? options.delay : 0,\n    signal: controller.signal,\n  };\n\n  const node = {\n    _controller: controller,\n  };\n\n  scheduler\n    .postTask(\n      runTask.bind(null, priorityLevel, postTaskPriority, node, callback),\n      postTaskOptions,\n    )\n    .catch(handleAbortError);\n\n  return node;\n}\n\nfunction runTask<T>(\n  priorityLevel: PriorityLevel,\n  postTaskPriority: PostTaskPriorityLevel,\n  node: CallbackNode,\n  callback: SchedulerCallback<T>,\n) {\n  deadline = getCurrentTime() + yieldInterval;\n  try {\n    currentPriorityLevel_DEPRECATED = priorityLevel;\n    const didTimeout_DEPRECATED = false;\n    const result = callback(didTimeout_DEPRECATED);\n    if (typeof result === 'function') {\n      // Assume this is a continuation\n      const continuation: SchedulerCallback<T> = (result: any);\n      const continuationOptions = {\n        signal: node._controller.signal,\n      };\n\n      const nextTask = runTask.bind(\n        null,\n        priorityLevel,\n        postTaskPriority,\n        node,\n        continuation,\n      );\n\n      if (scheduler.yield !== undefined) {\n        scheduler\n          .yield(continuationOptions)\n          .then(nextTask)\n          .catch(handleAbortError);\n      } else {\n        scheduler\n          .postTask(nextTask, continuationOptions)\n          .catch(handleAbortError);\n      }\n    }\n  } catch (error) {\n    // We're inside a `postTask` promise. If we don't handle this error, then it\n    // will trigger an \"Unhandled promise rejection\" error. We don't want that,\n    // but we do want the default error reporting behavior that normal\n    // (non-Promise) tasks get for unhandled errors.\n    //\n    // So we'll re-throw the error inside a regular browser task.\n    setTimeout(() => {\n      throw error;\n    });\n  } finally {\n    currentPriorityLevel_DEPRECATED = NormalPriority;\n  }\n}\n\nfunction handleAbortError(error: any) {\n  // Abort errors are an implementation detail. We don't expose the\n  // TaskController to the user, nor do we expose the promise that is returned\n  // from `postTask`. So we should suppress them, since there's no way for the\n  // user to handle them.\n}\n\nexport function unstable_cancelCallback(node: CallbackNode) {\n  const controller = node._controller;\n  controller.abort();\n}\n\nexport function unstable_runWithPriority<T>(\n  priorityLevel: PriorityLevel,\n  callback: () => T,\n): T {\n  const previousPriorityLevel = currentPriorityLevel_DEPRECATED;\n  currentPriorityLevel_DEPRECATED = priorityLevel;\n  try {\n    return callback();\n  } finally {\n    currentPriorityLevel_DEPRECATED = previousPriorityLevel;\n  }\n}\n\nexport function unstable_getCurrentPriorityLevel(): PriorityLevel {\n  return currentPriorityLevel_DEPRECATED;\n}\n\nexport function unstable_next<T>(callback: () => T): T {\n  let priorityLevel;\n  switch (currentPriorityLevel_DEPRECATED) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel_DEPRECATED;\n      break;\n  }\n\n  const previousPriorityLevel = currentPriorityLevel_DEPRECATED;\n  currentPriorityLevel_DEPRECATED = priorityLevel;\n  try {\n    return callback();\n  } finally {\n    currentPriorityLevel_DEPRECATED = previousPriorityLevel;\n  }\n}\n\nexport function unstable_wrapCallback<T>(callback: () => T): () => T {\n  const parentPriorityLevel = currentPriorityLevel_DEPRECATED;\n  return () => {\n    const previousPriorityLevel = currentPriorityLevel_DEPRECATED;\n    currentPriorityLevel_DEPRECATED = parentPriorityLevel;\n    try {\n      return callback();\n    } finally {\n      currentPriorityLevel_DEPRECATED = previousPriorityLevel;\n    }\n  };\n}\n\nexport function unstable_forceFrameRate() {}\n\n// Currently no profiling build\nexport const unstable_Profiling = null;\n"],"names":["ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","perf","window","performance","setTimeout","scheduler","global","getCurrentTime","now","bind","unstable_now","yieldInterval","deadline","currentPriorityLevel_DEPRECATED","unstable_shouldYield","unstable_requestPaint","unstable_scheduleCallback","priorityLevel","callback","options","postTaskPriority","controller","TaskController","priority","postTaskOptions","delay","signal","node","_controller","postTask","runTask","catch","handleAbortError","didTimeout_DEPRECATED","result","continuation","continuationOptions","nextTask","yield","undefined","then","error","unstable_cancelCallback","abort","unstable_runWithPriority","previousPriorityLevel","unstable_getCurrentPriorityLevel","unstable_next","unstable_wrapCallback","parentPriorityLevel","unstable_forceFrameRate","unstable_Profiling"],"mappings":"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"}