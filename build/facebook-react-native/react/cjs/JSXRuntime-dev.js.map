{"version":3,"file":"JSXRuntime-dev.js","sources":["../../../../packages/shared/forks/ReactFeatureFlags.native-fb.js","../../../../packages/shared/ReactSymbols.js","../../../../packages/shared/getComponentNameFromType.js","../../../../packages/shared/ReactSharedInternals.js","../../../../packages/shared/hasOwnProperty.js","../../../../packages/shared/CheckStringCoercion.js","../../../../packages/shared/isArray.js","../../../../packages/react/src/jsx/ReactJSXElement.js","../../../../packages/react/src/jsx/ReactJSX.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport typeof * as FeatureFlagsType from 'shared/ReactFeatureFlags';\nimport typeof * as ExportsType from './ReactFeatureFlags.native-fb';\nimport typeof * as DynamicExportsType from './ReactFeatureFlags.native-fb-dynamic';\n\n// Re-export dynamic flags from the internal module.\n// Intentionally using * because this import is compiled to a `require` call.\nimport * as dynamicFlagsUntyped from 'ReactNativeInternalFeatureFlags';\nconst dynamicFlags: DynamicExportsType = (dynamicFlagsUntyped: any);\n\n// We destructure each value before re-exporting to avoid a dynamic look-up on\n// the exports object every time a flag is read.\nexport const {\n  alwaysThrottleRetries,\n  enableFabricCompleteRootInCommitPhase,\n  enableHiddenSubtreeInsertionEffectCleanup,\n  enableObjectFiber,\n  enablePersistedModeClonedFlag,\n  enableShallowPropDiffing,\n  enableUseEffectCRUDOverload,\n  passChildrenWhenCloningPersistedNodes,\n  enableSiblingPrerendering,\n  enableFastAddPropertiesInDiffing,\n  enableLazyPublicInstanceInFabric,\n  renameElementSymbol,\n  ownerStackLimit,\n} = dynamicFlags;\n\n// The rest of the flags are static for better dead code elimination.\nexport const disableClientCache = true;\nexport const disableCommentsAsDOMContainers = true;\nexport const disableDefaultPropsExceptForClasses = true;\nexport const disableInputAttributeSyncing = false;\nexport const disableLegacyContext = false;\nexport const disableLegacyContextForFunctionComponents = false;\nexport const disableLegacyMode = false;\nexport const disableSchedulerTimeoutInWorkLoop = false;\nexport const disableTextareaChildren = false;\nexport const enableAsyncDebugInfo = false;\nexport const enableAsyncIterableChildren = false;\nexport const enableCPUSuspense = true;\nexport const enableCreateEventHandleAPI = false;\nexport const enableDO_NOT_USE_disableStrictPassiveEffect = false;\nexport const enableMoveBefore = true;\nexport const enableFizzExternalRuntime = true;\nexport const enableHalt = false;\nexport const enableInfiniteRenderLoopDetection = false;\nexport const enableLegacyCache = false;\nexport const enableLegacyFBSupport = false;\nexport const enableLegacyHidden = false;\nexport const enableNoCloningMemoCache = false;\nexport const enablePostpone = false;\nexport const enableProfilerCommitHooks = __PROFILE__;\nexport const enableProfilerNestedUpdatePhase = __PROFILE__;\nexport const enableProfilerTimer = __PROFILE__;\nexport const enableReactTestRendererWarning = false;\nexport const enableRenderableContext = true;\nexport const enableRetryLaneExpiration = false;\nexport const enableSchedulingProfiler = __PROFILE__;\nexport const enableComponentPerformanceTrack = false;\nexport const enableScopeAPI = false;\nexport const enableSuspenseAvoidThisFallback = false;\nexport const enableSuspenseCallback = true;\nexport const enableTaint = true;\nexport const enableTransitionTracing = false;\nexport const enableTrustedTypesIntegration = false;\nexport const enableUpdaterTracking = __PROFILE__;\nexport const enableUseEffectEventHook = false;\nexport const favorSafetyOverHydrationPerf = true;\nexport const retryLaneExpirationMs = 5000;\nexport const syncLaneExpirationMs = 250;\nexport const transitionLaneExpirationMs = 5000;\nexport const enableHydrationLaneScheduling = true;\nexport const enableYieldingBeforePassive = false;\nexport const enableThrottledScheduling = false;\nexport const enableViewTransition = false;\nexport const enableSwipeTransition = false;\nexport const enableScrollEndPolyfill = true;\nexport const enableFragmentRefs = false;\n\n// Flow magic to verify the exports of this file match the original version.\n((((null: any): ExportsType): FeatureFlagsType): ExportsType);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {renameElementSymbol} from 'shared/ReactFeatureFlags';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types.\nexport const REACT_LEGACY_ELEMENT_TYPE: symbol = Symbol.for('react.element');\nexport const REACT_ELEMENT_TYPE: symbol = renameElementSymbol\n  ? Symbol.for('react.transitional.element')\n  : REACT_LEGACY_ELEMENT_TYPE;\nexport const REACT_PORTAL_TYPE: symbol = Symbol.for('react.portal');\nexport const REACT_FRAGMENT_TYPE: symbol = Symbol.for('react.fragment');\nexport const REACT_STRICT_MODE_TYPE: symbol = Symbol.for('react.strict_mode');\nexport const REACT_PROFILER_TYPE: symbol = Symbol.for('react.profiler');\nexport const REACT_PROVIDER_TYPE: symbol = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\nexport const REACT_CONSUMER_TYPE: symbol = Symbol.for('react.consumer');\nexport const REACT_CONTEXT_TYPE: symbol = Symbol.for('react.context');\nexport const REACT_FORWARD_REF_TYPE: symbol = Symbol.for('react.forward_ref');\nexport const REACT_SUSPENSE_TYPE: symbol = Symbol.for('react.suspense');\nexport const REACT_SUSPENSE_LIST_TYPE: symbol = Symbol.for(\n  'react.suspense_list',\n);\nexport const REACT_MEMO_TYPE: symbol = Symbol.for('react.memo');\nexport const REACT_LAZY_TYPE: symbol = Symbol.for('react.lazy');\nexport const REACT_SCOPE_TYPE: symbol = Symbol.for('react.scope');\nexport const REACT_ACTIVITY_TYPE: symbol = Symbol.for('react.activity');\nexport const REACT_LEGACY_HIDDEN_TYPE: symbol = Symbol.for(\n  'react.legacy_hidden',\n);\nexport const REACT_TRACING_MARKER_TYPE: symbol = Symbol.for(\n  'react.tracing_marker',\n);\n\nexport const REACT_MEMO_CACHE_SENTINEL: symbol = Symbol.for(\n  'react.memo_cache_sentinel',\n);\n\nexport const REACT_POSTPONE_TYPE: symbol = Symbol.for('react.postpone');\n\nexport const REACT_VIEW_TRANSITION_TYPE: symbol = Symbol.for(\n  'react.view_transition',\n);\n\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<any> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n\nexport const ASYNC_ITERATOR = Symbol.asyncIterator;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {LazyComponent} from 'react/src/ReactLazy';\nimport type {ReactContext, ReactConsumerType} from 'shared/ReactTypes';\n\nimport {\n  REACT_CONTEXT_TYPE,\n  REACT_CONSUMER_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_TRACING_MARKER_TYPE,\n  REACT_VIEW_TRANSITION_TYPE,\n  REACT_ACTIVITY_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {\n  enableTransitionTracing,\n  enableRenderableContext,\n  enableViewTransition,\n} from './ReactFeatureFlags';\n\n// Keep in sync with react-reconciler/getComponentNameFromFiber\nfunction getWrappedName(\n  outerType: mixed,\n  innerType: any,\n  wrapperName: string,\n): string {\n  const displayName = (outerType: any).displayName;\n  if (displayName) {\n    return displayName;\n  }\n  const functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName;\n}\n\n// Keep in sync with react-reconciler/getComponentNameFromFiber\nfunction getContextName(type: ReactContext<any>) {\n  return type.displayName || 'Context';\n}\n\nconst REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n\n// Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\nexport default function getComponentNameFromType(type: mixed): string | null {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n  if (typeof type === 'function') {\n    if ((type: any).$$typeof === REACT_CLIENT_REFERENCE) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n    return (type: any).displayName || type.name || null;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n    case REACT_ACTIVITY_TYPE:\n      return 'Activity';\n    case REACT_VIEW_TRANSITION_TYPE:\n      if (enableViewTransition) {\n        return 'ViewTransition';\n      }\n    // Fall through\n    case REACT_TRACING_MARKER_TYPE:\n      if (enableTransitionTracing) {\n        return 'TracingMarker';\n      }\n  }\n  if (typeof type === 'object') {\n    if (__DEV__) {\n      if (typeof (type: any).tag === 'number') {\n        console.error(\n          'Received an unexpected object in getComponentNameFromType(). ' +\n            'This is likely a bug in React. Please file an issue.',\n        );\n      }\n    }\n    switch (type.$$typeof) {\n      case REACT_PORTAL_TYPE:\n        return 'Portal';\n      case REACT_PROVIDER_TYPE:\n        if (enableRenderableContext) {\n          return null;\n        } else {\n          const provider = (type: any);\n          return getContextName(provider._context) + '.Provider';\n        }\n      case REACT_CONTEXT_TYPE:\n        const context: ReactContext<any> = (type: any);\n        if (enableRenderableContext) {\n          return getContextName(context) + '.Provider';\n        } else {\n          return getContextName(context) + '.Consumer';\n        }\n      case REACT_CONSUMER_TYPE:\n        if (enableRenderableContext) {\n          const consumer: ReactConsumerType<any> = (type: any);\n          return getContextName(consumer._context) + '.Consumer';\n        } else {\n          return null;\n        }\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n      case REACT_MEMO_TYPE:\n        const outerName = (type: any).displayName || null;\n        if (outerName !== null) {\n          return outerName;\n        }\n        return getComponentNameFromType(type.type) || 'Memo';\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          return getComponentNameFromType(init(payload));\n        } catch (x) {\n          return null;\n        }\n      }\n    }\n  }\n  return null;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// $FlowFixMe[method-unbinding]\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport default hasOwnProperty;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value: mixed): string {\n  if (__DEV__) {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    const hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    const type =\n      (hasToStringTag && (value: any)[Symbol.toStringTag]) ||\n      (value: any).constructor.name ||\n      'Object';\n    // $FlowFixMe[incompatible-return]\n    return type;\n  }\n}\n\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction willCoercionThrow(value: mixed): boolean {\n  if (__DEV__) {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\n/** @noinline */\nfunction testStringCoercion(value: mixed) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + (value: any);\n}\n\nexport function checkAttributeStringCoercion(\n  value: mixed,\n  attributeName: string,\n): void | string {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided `%s` attribute is an unsupported type %s.' +\n          ' This value must be coerced to a string before using it here.',\n        attributeName,\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkKeyStringCoercion(value: mixed): void | string {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided key is an unsupported type %s.' +\n          ' This value must be coerced to a string before using it here.',\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkPropStringCoercion(\n  value: mixed,\n  propName: string,\n): void | string {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided `%s` prop is an unsupported type %s.' +\n          ' This value must be coerced to a string before using it here.',\n        propName,\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkOptionStringCoercion(\n  value: mixed,\n  propName: string,\n): void | string {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided `%s` option is an unsupported type %s.' +\n          ' This value must be coerced to a string before using it here.',\n        propName,\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkCSSPropertyStringCoercion(\n  value: mixed,\n  propName: string,\n): void | string {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided `%s` CSS property is an unsupported type %s.' +\n          ' This value must be coerced to a string before using it here.',\n        propName,\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkHtmlStringCoercion(value: mixed): void | string {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided HTML markup uses a value of unsupported type %s.' +\n          ' This value must be coerced to a string before using it here.',\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkFormFieldValueStringCoercion(value: mixed): void | string {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'Form field values (value, checked, defaultValue, or defaultChecked props)' +\n          ' must be strings, not %s.' +\n          ' This value must be coerced to a string before using it here.',\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\n\nconst isArrayImpl = Array.isArray;\n\nfunction isArray(a: mixed): boolean {\n  return isArrayImpl(a);\n}\n\nexport default isArray;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport hasOwnProperty from 'shared/hasOwnProperty';\nimport assign from 'shared/assign';\nimport {\n  REACT_ELEMENT_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\nimport isArray from 'shared/isArray';\nimport {\n  disableDefaultPropsExceptForClasses,\n  ownerStackLimit,\n} from 'shared/ReactFeatureFlags';\n\nconst createTask =\n  // eslint-disable-next-line react-internal/no-production-logging\n  __DEV__ && console.createTask\n    ? // eslint-disable-next-line react-internal/no-production-logging\n      console.createTask\n    : () => null;\n\nfunction getTaskName(type) {\n  if (type === REACT_FRAGMENT_TYPE) {\n    return '<>';\n  }\n  if (\n    typeof type === 'object' &&\n    type !== null &&\n    type.$$typeof === REACT_LAZY_TYPE\n  ) {\n    // We don't want to eagerly initialize the initializer in DEV mode so we can't\n    // call it to extract the type so we don't know the type of this component.\n    return '<...>';\n  }\n  try {\n    const name = getComponentNameFromType(type);\n    return name ? '<' + name + '>' : '<...>';\n  } catch (x) {\n    return '<...>';\n  }\n}\n\nfunction getOwner() {\n  if (__DEV__) {\n    const dispatcher = ReactSharedInternals.A;\n    if (dispatcher === null) {\n      return null;\n    }\n    return dispatcher.getOwner();\n  }\n  return null;\n}\n\n/** @noinline */\nfunction UnknownOwner() {\n  /** @noinline */\n  return (() => Error('react-stack-top-frame'))();\n}\nconst createFakeCallStack = {\n  'react-stack-bottom-frame': function (callStackForError) {\n    return callStackForError();\n  },\n};\n\nlet specialPropKeyWarningShown;\nlet didWarnAboutElementRef;\nlet didWarnAboutOldJSXRuntime;\nlet unknownOwnerDebugStack;\nlet unknownOwnerDebugTask;\n\nif (__DEV__) {\n  didWarnAboutElementRef = {};\n\n  // We use this technique to trick minifiers to preserve the function name.\n  unknownOwnerDebugStack = createFakeCallStack['react-stack-bottom-frame'].bind(\n    createFakeCallStack,\n    UnknownOwner,\n  )();\n  unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));\n}\n\nfunction hasValidRef(config) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(config, 'ref')) {\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(config, 'key')) {\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  if (__DEV__) {\n    const warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n        console.error(\n          '%s: `key` is not a prop. Trying to access it will result ' +\n            'in `undefined` being returned. If you need to access the same ' +\n            'value within the child component, you should pass it as a different ' +\n            'prop. (https://react.dev/link/special-props)',\n          displayName,\n        );\n      }\n    };\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true,\n    });\n  }\n}\n\nfunction elementRefGetterWithDeprecationWarning() {\n  if (__DEV__) {\n    const componentName = getComponentNameFromType(this.type);\n    if (!didWarnAboutElementRef[componentName]) {\n      didWarnAboutElementRef[componentName] = true;\n      console.error(\n        'Accessing element.ref was removed in React 19. ref is now a ' +\n          'regular prop. It will be removed from the JSX Element ' +\n          'type in a future release.',\n      );\n    }\n\n    // An undefined `element.ref` is coerced to `null` for\n    // backwards compatibility.\n    const refProp = this.props.ref;\n    return refProp !== undefined ? refProp : null;\n  }\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.transitional.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\nfunction ReactElement(\n  type,\n  key,\n  self,\n  source,\n  owner,\n  props,\n  debugStack,\n  debugTask,\n) {\n  // Ignore whatever was passed as the ref argument and treat `props.ref` as\n  // the source of truth. The only thing we use this for is `element.ref`,\n  // which will log a deprecation warning on access. In the next release, we\n  // can remove `element.ref` as well as the `ref` argument.\n  const refProp = props.ref;\n\n  // An undefined `element.ref` is coerced to `null` for\n  // backwards compatibility.\n  const ref = refProp !== undefined ? refProp : null;\n\n  let element;\n  if (__DEV__) {\n    // In dev, make `ref` a non-enumerable property with a warning. It's non-\n    // enumerable so that test matchers and serializers don't access it and\n    // trigger the warning.\n    //\n    // `ref` will be removed from the element completely in a future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n\n      // Built-in properties that belong on the element\n      type,\n      key,\n\n      props,\n\n      // Record the component responsible for creating this element.\n      _owner: owner,\n    };\n    if (ref !== null) {\n      Object.defineProperty(element, 'ref', {\n        enumerable: false,\n        get: elementRefGetterWithDeprecationWarning,\n      });\n    } else {\n      // Don't warn on access if a ref is not given. This reduces false\n      // positives in cases where a test serializer uses\n      // getOwnPropertyDescriptors to compare objects, like Jest does, which is\n      // a problem because it bypasses non-enumerability.\n      //\n      // So unfortunately this will trigger a false positive warning in Jest\n      // when the diff is printed:\n      //\n      //   expect(<div ref={ref} />).toEqual(<span ref={ref} />);\n      //\n      // A bit sketchy, but this is what we've done for the `props.key` and\n      // `props.ref` accessors for years, which implies it will be good enough\n      // for `element.ref`, too. Let's see if anyone complains.\n      Object.defineProperty(element, 'ref', {\n        enumerable: false,\n        value: null,\n      });\n    }\n  } else {\n    // In prod, `ref` is a regular property and _owner doesn't exist.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n\n      // Built-in properties that belong on the element\n      type,\n      key,\n      ref,\n\n      props,\n    };\n  }\n\n  if (__DEV__) {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: 0,\n    });\n    // debugInfo contains Server Component debug information.\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null,\n    });\n    Object.defineProperty(element, '_debugStack', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: debugStack,\n    });\n    Object.defineProperty(element, '_debugTask', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: debugTask,\n    });\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\n\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\nexport function jsxProd(type, config, maybeKey) {\n  let key = null;\n\n  // Currently, key can be spread in as a prop. This causes a potential\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n  // but as an intermediary step, we will use jsxDEV for everything except\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n  // key is explicitly declared to be undefined or not.\n  if (maybeKey !== undefined) {\n    if (__DEV__) {\n      checkKeyStringCoercion(maybeKey);\n    }\n    key = '' + maybeKey;\n  }\n\n  if (hasValidKey(config)) {\n    if (__DEV__) {\n      checkKeyStringCoercion(config.key);\n    }\n    key = '' + config.key;\n  }\n\n  let props;\n  if (!('key' in config)) {\n    // If key was not spread in, we can reuse the original props object. This\n    // only works for `jsx`, not `createElement`, because `jsx` is a compiler\n    // target and the compiler always passes a new object. For `createElement`,\n    // we can't assume a new object is passed every time because it can be\n    // called manually.\n    //\n    // Spreading key is a warning in dev. In a future release, we will not\n    // remove a spread key from the props object. (But we'll still warn.) We'll\n    // always pass the object straight through.\n    props = config;\n  } else {\n    // We need to remove reserved props (key, prop, ref). Create a fresh props\n    // object and copy over all the non-reserved props. We don't use `delete`\n    // because in V8 it will deopt the object to dictionary mode.\n    props = {};\n    for (const propName in config) {\n      // Skip over reserved prop names\n      if (propName !== 'key') {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  if (!disableDefaultPropsExceptForClasses) {\n    // Resolve default props\n    if (type && type.defaultProps) {\n      const defaultProps = type.defaultProps;\n      for (const propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n  }\n\n  return ReactElement(\n    type,\n    key,\n    undefined,\n    undefined,\n    getOwner(),\n    props,\n    undefined,\n    undefined,\n  );\n}\n\n// While `jsxDEV` should never be called when running in production, we do\n// support `jsx` and `jsxs` when running in development. This supports the case\n// where a third-party dependency ships code that was compiled for production;\n// we want to still provide warnings in development.\n//\n// So these functions are the _dev_ implementations of the _production_\n// API signatures.\n//\n// Since these functions are dev-only, it's ok to add an indirection here. They\n// only exist to provide different versions of `isStaticChildren`. (We shouldn't\n// use this pattern for the prod versions, though, because it will add an call\n// frame.)\nexport function jsxProdSignatureRunningInDevWithDynamicChildren(\n  type,\n  config,\n  maybeKey,\n  source,\n  self,\n) {\n  if (__DEV__) {\n    const isStaticChildren = false;\n    const trackActualOwner =\n      __DEV__ &&\n      ReactSharedInternals.recentlyCreatedOwnerStacks++ < ownerStackLimit;\n    return jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      __DEV__ &&\n        (trackActualOwner\n          ? Error('react-stack-top-frame')\n          : unknownOwnerDebugStack),\n      __DEV__ &&\n        (trackActualOwner\n          ? createTask(getTaskName(type))\n          : unknownOwnerDebugTask),\n    );\n  }\n}\n\nexport function jsxProdSignatureRunningInDevWithStaticChildren(\n  type,\n  config,\n  maybeKey,\n  source,\n  self,\n) {\n  if (__DEV__) {\n    const isStaticChildren = true;\n    const trackActualOwner =\n      __DEV__ &&\n      ReactSharedInternals.recentlyCreatedOwnerStacks++ < ownerStackLimit;\n    return jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      __DEV__ &&\n        (trackActualOwner\n          ? Error('react-stack-top-frame')\n          : unknownOwnerDebugStack),\n      __DEV__ &&\n        (trackActualOwner\n          ? createTask(getTaskName(type))\n          : unknownOwnerDebugTask),\n    );\n  }\n}\n\nconst didWarnAboutKeySpread = {};\n\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\nexport function jsxDEV(type, config, maybeKey, isStaticChildren, source, self) {\n  const trackActualOwner =\n    __DEV__ &&\n    ReactSharedInternals.recentlyCreatedOwnerStacks++ < ownerStackLimit;\n  return jsxDEVImpl(\n    type,\n    config,\n    maybeKey,\n    isStaticChildren,\n    source,\n    self,\n    __DEV__ &&\n      (trackActualOwner\n        ? Error('react-stack-top-frame')\n        : unknownOwnerDebugStack),\n    __DEV__ &&\n      (trackActualOwner\n        ? createTask(getTaskName(type))\n        : unknownOwnerDebugTask),\n  );\n}\n\nfunction jsxDEVImpl(\n  type,\n  config,\n  maybeKey,\n  isStaticChildren,\n  source,\n  self,\n  debugStack,\n  debugTask,\n) {\n  if (__DEV__) {\n    // We don't warn for invalid element type here because with owner stacks,\n    // we error in the renderer. The renderer is the only one that knows what\n    // types are valid for this particular renderer so we let it error there.\n\n    // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing\n    // errors. We don't want exception behavior to differ between dev and\n    // prod. (Rendering will throw with a helpful message and as soon as the\n    // type is fixed, the key warnings will appear.)\n    // With owner stacks, we no longer need the type here so this comment is\n    // no longer true. Which is why we can run this even for invalid types.\n    const children = config.children;\n    if (children !== undefined) {\n      if (isStaticChildren) {\n        if (isArray(children)) {\n          for (let i = 0; i < children.length; i++) {\n            validateChildKeys(children[i], type);\n          }\n\n          if (Object.freeze) {\n            Object.freeze(children);\n          }\n        } else {\n          console.error(\n            'React.jsx: Static children should always be an array. ' +\n              'You are likely explicitly calling React.jsxs or React.jsxDEV. ' +\n              'Use the Babel transform instead.',\n          );\n        }\n      } else {\n        validateChildKeys(children, type);\n      }\n    }\n\n    // Warn about key spread regardless of whether the type is valid.\n    if (hasOwnProperty.call(config, 'key')) {\n      const componentName = getComponentNameFromType(type);\n      const keys = Object.keys(config).filter(k => k !== 'key');\n      const beforeExample =\n        keys.length > 0\n          ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}'\n          : '{key: someKey}';\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        const afterExample =\n          keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n        console.error(\n          'A props object containing a \"key\" prop is being spread into JSX:\\n' +\n            '  let props = %s;\\n' +\n            '  <%s {...props} />\\n' +\n            'React keys must be passed directly to JSX without using spread:\\n' +\n            '  let props = %s;\\n' +\n            '  <%s key={someKey} {...props} />',\n          beforeExample,\n          componentName,\n          afterExample,\n          componentName,\n        );\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    let key = null;\n\n    // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n    if (maybeKey !== undefined) {\n      if (__DEV__) {\n        checkKeyStringCoercion(maybeKey);\n      }\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      if (__DEV__) {\n        checkKeyStringCoercion(config.key);\n      }\n      key = '' + config.key;\n    }\n\n    let props;\n    if (!('key' in config)) {\n      // If key was not spread in, we can reuse the original props object. This\n      // only works for `jsx`, not `createElement`, because `jsx` is a compiler\n      // target and the compiler always passes a new object. For `createElement`,\n      // we can't assume a new object is passed every time because it can be\n      // called manually.\n      //\n      // Spreading key is a warning in dev. In a future release, we will not\n      // remove a spread key from the props object. (But we'll still warn.) We'll\n      // always pass the object straight through.\n      props = config;\n    } else {\n      // We need to remove reserved props (key, prop, ref). Create a fresh props\n      // object and copy over all the non-reserved props. We don't use `delete`\n      // because in V8 it will deopt the object to dictionary mode.\n      props = {};\n      for (const propName in config) {\n        // Skip over reserved prop names\n        if (propName !== 'key') {\n          props[propName] = config[propName];\n        }\n      }\n    }\n\n    if (!disableDefaultPropsExceptForClasses) {\n      // Resolve default props\n      if (type && type.defaultProps) {\n        const defaultProps = type.defaultProps;\n        for (const propName in defaultProps) {\n          if (props[propName] === undefined) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n      }\n    }\n\n    if (key) {\n      const displayName =\n        typeof type === 'function'\n          ? type.displayName || type.name || 'Unknown'\n          : type;\n      defineKeyPropWarningGetter(props, displayName);\n    }\n\n    return ReactElement(\n      type,\n      key,\n      self,\n      source,\n      getOwner(),\n      props,\n      debugStack,\n      debugTask,\n    );\n  }\n}\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\nexport function createElement(type, config, children) {\n  if (__DEV__) {\n    // We don't warn for invalid element type here because with owner stacks,\n    // we error in the renderer. The renderer is the only one that knows what\n    // types are valid for this particular renderer so we let it error there.\n\n    // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing\n    // errors. We don't want exception behavior to differ between dev and\n    // prod. (Rendering will throw with a helpful message and as soon as the\n    // type is fixed, the key warnings will appear.)\n    for (let i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n\n    // Unlike the jsx() runtime, createElement() doesn't warn about key spread.\n  }\n\n  let propName;\n\n  // Reserved names are extracted\n  const props = {};\n\n  let key = null;\n\n  if (config != null) {\n    if (__DEV__) {\n      if (\n        !didWarnAboutOldJSXRuntime &&\n        '__self' in config &&\n        // Do not assume this is the result of an oudated JSX transform if key\n        // is present, because the modern JSX transform sometimes outputs\n        // createElement to preserve precedence between a static key and a\n        // spread key. To avoid false positive warnings, we never warn if\n        // there's a key.\n        !('key' in config)\n      ) {\n        didWarnAboutOldJSXRuntime = true;\n        console.warn(\n          'Your app (or one of its dependencies) is using an outdated JSX ' +\n            'transform. Update to the modern JSX transform for ' +\n            'faster performance: https://react.dev/link/new-jsx-transform',\n        );\n      }\n    }\n\n    if (hasValidKey(config)) {\n      if (__DEV__) {\n        checkKeyStringCoercion(config.key);\n      }\n      key = '' + config.key;\n    }\n\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (\n        hasOwnProperty.call(config, propName) &&\n        // Skip over reserved prop names\n        propName !== 'key' &&\n        // Even though we don't use these anymore in the runtime, we don't want\n        // them to appear as props, so in createElement we filter them out.\n        // We don't have to do this in the jsx() runtime because the jsx()\n        // transform never passed these as props; it used separate arguments.\n        propName !== '__self' &&\n        propName !== '__source'\n      ) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  const childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    const childArray = Array(childrenLength);\n    for (let i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    if (__DEV__) {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    const defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  if (__DEV__) {\n    if (key) {\n      const displayName =\n        typeof type === 'function'\n          ? type.displayName || type.name || 'Unknown'\n          : type;\n      defineKeyPropWarningGetter(props, displayName);\n    }\n  }\n  const trackActualOwner =\n    __DEV__ &&\n    ReactSharedInternals.recentlyCreatedOwnerStacks++ < ownerStackLimit;\n  return ReactElement(\n    type,\n    key,\n    undefined,\n    undefined,\n    getOwner(),\n    props,\n    __DEV__ &&\n      (trackActualOwner\n        ? Error('react-stack-top-frame')\n        : unknownOwnerDebugStack),\n    __DEV__ &&\n      (trackActualOwner\n        ? createTask(getTaskName(type))\n        : unknownOwnerDebugTask),\n  );\n}\n\nexport function cloneAndReplaceKey(oldElement, newKey) {\n  const clonedElement = ReactElement(\n    oldElement.type,\n    newKey,\n    undefined,\n    undefined,\n    !__DEV__ ? undefined : oldElement._owner,\n    oldElement.props,\n    __DEV__ && oldElement._debugStack,\n    __DEV__ && oldElement._debugTask,\n  );\n  if (__DEV__) {\n    // The cloned element should inherit the original element's key validation.\n    if (oldElement._store) {\n      clonedElement._store.validated = oldElement._store.validated;\n    }\n  }\n  return clonedElement;\n}\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\nexport function cloneElement(element, config, children) {\n  if (element === null || element === undefined) {\n    throw new Error(\n      `The argument must be a React element, but you passed ${element}.`,\n    );\n  }\n\n  let propName;\n\n  // Original props are copied\n  const props = assign({}, element.props);\n\n  // Reserved names are extracted\n  let key = element.key;\n\n  // Owner will be preserved, unless ref is overridden\n  let owner = !__DEV__ ? undefined : element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      owner = __DEV__ ? getOwner() : undefined;\n    }\n    if (hasValidKey(config)) {\n      if (__DEV__) {\n        checkKeyStringCoercion(config.key);\n      }\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    let defaultProps;\n    if (\n      !disableDefaultPropsExceptForClasses &&\n      element.type &&\n      element.type.defaultProps\n    ) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (\n        hasOwnProperty.call(config, propName) &&\n        // Skip over reserved prop names\n        propName !== 'key' &&\n        // ...and maybe these, too, though we currently rely on them for\n        // warnings and debug information in dev. Need to decide if we're OK\n        // with dropping them. In the jsx() runtime it's not an issue because\n        // the data gets passed as separate arguments instead of props, but\n        // it would be nice to stop relying on them entirely so we can drop\n        // them from the internal Fiber field.\n        propName !== '__self' &&\n        propName !== '__source' &&\n        // Undefined `ref` is ignored by cloneElement. We treat it the same as\n        // if the property were missing. This is mostly for\n        // backwards compatibility.\n        !(propName === 'ref' && config.ref === undefined)\n      ) {\n        if (\n          !disableDefaultPropsExceptForClasses &&\n          config[propName] === undefined &&\n          defaultProps !== undefined\n        ) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  const childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    const childArray = Array(childrenLength);\n    for (let i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  const clonedElement = ReactElement(\n    element.type,\n    key,\n    undefined,\n    undefined,\n    owner,\n    props,\n    __DEV__ && element._debugStack,\n    __DEV__ && element._debugTask,\n  );\n\n  for (let i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], clonedElement.type);\n  }\n\n  return clonedElement;\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (__DEV__) {\n    // With owner stacks is, no warnings happens. All we do is\n    // mark elements as being in a valid static child position so they\n    // don't need keys.\n    if (isValidElement(node)) {\n      if (node._store) {\n        node._store.validated = 1;\n      }\n    }\n  }\n}\n\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\nexport function isValidElement(object) {\n  return (\n    typeof object === 'object' &&\n    object !== null &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nimport {REACT_FRAGMENT_TYPE} from 'shared/ReactSymbols';\nimport {\n  jsxProd,\n  jsxProdSignatureRunningInDevWithDynamicChildren,\n  jsxProdSignatureRunningInDevWithStaticChildren,\n  jsxDEV as _jsxDEV,\n} from './ReactJSXElement';\n\nconst jsx: any = __DEV__\n  ? jsxProdSignatureRunningInDevWithDynamicChildren\n  : jsxProd;\n// we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\nconst jsxs: any = __DEV__\n  ? jsxProdSignatureRunningInDevWithStaticChildren\n  : jsxProd;\n\nconst jsxDEV: any = __DEV__ ? _jsxDEV : undefined;\n\nexport {REACT_FRAGMENT_TYPE as Fragment, jsx, jsxs, jsxDEV};\n"],"names":["dynamicFlags","dynamicFlagsUntyped","renameElementSymbol","ownerStackLimit","REACT_LEGACY_ELEMENT_TYPE","Symbol","for","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONSUMER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_ACTIVITY_TYPE","getWrappedName","outerType","innerType","wrapperName","displayName","functionName","name","getContextName","type","REACT_CLIENT_REFERENCE","getComponentNameFromType","$$typeof","tag","console","error","context","consumer","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","ReactSharedInternals","React","__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","hasOwnProperty","Object","prototype","typeName","value","hasToStringTag","toStringTag","constructor","willCoercionThrow","testStringCoercion","e","checkKeyStringCoercion","isArrayImpl","Array","isArray","a","createTask","getTaskName","getOwner","dispatcher","A","UnknownOwner","Error","createFakeCallStack","callStackForError","specialPropKeyWarningShown","didWarnAboutElementRef","unknownOwnerDebugStack","unknownOwnerDebugTask","bind","hasValidKey","config","call","getter","getOwnPropertyDescriptor","get","isReactWarning","key","undefined","defineKeyPropWarningGetter","props","warnAboutAccessingKey","defineProperty","configurable","elementRefGetterWithDeprecationWarning","componentName","refProp","ref","ReactElement","self","source","owner","debugStack","debugTask","element","_owner","enumerable","_store","writable","freeze","jsxProdSignatureRunningInDevWithDynamicChildren","maybeKey","isStaticChildren","trackActualOwner","recentlyCreatedOwnerStacks","jsxDEVImpl","jsxProdSignatureRunningInDevWithStaticChildren","didWarnAboutKeySpread","children","i","length","validateChildKeys","keys","filter","k","beforeExample","join","afterExample","propName","node","parentType","isValidElement","validated","object","jsx","jsxs"],"mappings":"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"}